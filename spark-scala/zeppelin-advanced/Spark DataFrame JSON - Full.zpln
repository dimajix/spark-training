{"paragraphs":[{"text":"%md\n# Working with JSON Data\n\nSpark supports reading and writing JSON very well out of the box. But the possible nesting of structures in JSONs often require some different approach in contrast when working with simple CSV files (or otherwise flat data models). Let us try to work a little bit with Twitter streaming data, which is proivded as complex nested JSON data.\n\n## 1. Load and Inspect\n\nFirst let's load some Twitter data and inspect its schema and some records","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Working with JSON Data</h1>\n<p>Spark supports reading and writing JSON very well out of the box. But the possible nesting of structures in JSONs often require some different approach in contrast when working with simple CSV files (or otherwise flat data models). Let us try to work a little bit with Twitter streaming data, which is proivded as complex nested JSON data.</p>\n<h2>1. Load and Inspect</h2>\n<p>First let's load some Twitter data and inspect its schema and some records</p>\n"}]},"apps":[],"jobName":"paragraph_1554400211119_-1400632431","id":"20180704-154213_1674119133","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4024"},{"text":"val tweets = spark.read.json(\"s3://dimajix-training/data/twitter-sample/\")\n\ntweets.printSchema","user":"anonymous","dateUpdated":"2019-04-04T17:50:16+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211120_1286874934","id":"20180704-154407_392895719","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4025","dateFinished":"2019-04-04T17:50:25+0000","dateStarted":"2019-04-04T17:50:16+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tweets: org.apache.spark.sql.DataFrame = [contributors: string, coordinates: struct<coordinates: array<double>, type: string> ... 31 more fields]\nroot\n |-- contributors: string (nullable = true)\n |-- coordinates: struct (nullable = true)\n |    |-- coordinates: array (nullable = true)\n |    |    |-- element: double (containsNull = true)\n |    |-- type: string (nullable = true)\n |-- created_at: string (nullable = true)\n |-- delete: struct (nullable = true)\n |    |-- status: struct (nullable = true)\n |    |    |-- id: long (nullable = true)\n |    |    |-- id_str: string (nullable = true)\n |    |    |-- user_id: long (nullable = true)\n |    |    |-- user_id_str: string (nullable = true)\n |    |-- timestamp_ms: string (nullable = true)\n |-- entities: struct (nullable = true)\n |    |-- hashtags: array (nullable = true)\n |    |    |-- element: struct (containsNull = true)\n |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |-- text: string (nullable = true)\n |    |-- media: array (nullable = true)\n |    |    |-- element: struct (containsNull = true)\n |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |-- id: long (nullable = true)\n |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |-- media_url: string (nullable = true)\n |    |    |    |-- media_url_https: string (nullable = true)\n |    |    |    |-- sizes: struct (nullable = true)\n |    |    |    |    |-- large: struct (nullable = true)\n |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- medium: struct (nullable = true)\n |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- small: struct (nullable = true)\n |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- thumb: struct (nullable = true)\n |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |-- source_status_id: long (nullable = true)\n |    |    |    |-- source_status_id_str: string (nullable = true)\n |    |    |    |-- source_user_id: long (nullable = true)\n |    |    |    |-- source_user_id_str: string (nullable = true)\n |    |    |    |-- type: string (nullable = true)\n |    |    |    |-- url: string (nullable = true)\n |    |-- symbols: array (nullable = true)\n |    |    |-- element: struct (containsNull = true)\n |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |-- text: string (nullable = true)\n |    |-- urls: array (nullable = true)\n |    |    |-- element: struct (containsNull = true)\n |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |-- url: string (nullable = true)\n |    |-- user_mentions: array (nullable = true)\n |    |    |-- element: struct (containsNull = true)\n |    |    |    |-- id: long (nullable = true)\n |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |-- name: string (nullable = true)\n |    |    |    |-- screen_name: string (nullable = true)\n |-- extended_entities: struct (nullable = true)\n |    |-- media: array (nullable = true)\n |    |    |-- element: struct (containsNull = true)\n |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |-- id: long (nullable = true)\n |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |-- media_url: string (nullable = true)\n |    |    |    |-- media_url_https: string (nullable = true)\n |    |    |    |-- sizes: struct (nullable = true)\n |    |    |    |    |-- large: struct (nullable = true)\n |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- medium: struct (nullable = true)\n |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- small: struct (nullable = true)\n |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- thumb: struct (nullable = true)\n |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |-- source_status_id: long (nullable = true)\n |    |    |    |-- source_status_id_str: string (nullable = true)\n |    |    |    |-- source_user_id: long (nullable = true)\n |    |    |    |-- source_user_id_str: string (nullable = true)\n |    |    |    |-- type: string (nullable = true)\n |    |    |    |-- url: string (nullable = true)\n |    |    |    |-- video_info: struct (nullable = true)\n |    |    |    |    |-- aspect_ratio: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- duration_millis: long (nullable = true)\n |    |    |    |    |-- variants: array (nullable = true)\n |    |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |    |-- bitrate: long (nullable = true)\n |    |    |    |    |    |    |-- content_type: string (nullable = true)\n |    |    |    |    |    |    |-- url: string (nullable = true)\n |-- favorite_count: long (nullable = true)\n |-- favorited: boolean (nullable = true)\n |-- filter_level: string (nullable = true)\n |-- geo: struct (nullable = true)\n |    |-- coordinates: array (nullable = true)\n |    |    |-- element: double (containsNull = true)\n |    |-- type: string (nullable = true)\n |-- id: long (nullable = true)\n |-- id_str: string (nullable = true)\n |-- in_reply_to_screen_name: string (nullable = true)\n |-- in_reply_to_status_id: long (nullable = true)\n |-- in_reply_to_status_id_str: string (nullable = true)\n |-- in_reply_to_user_id: long (nullable = true)\n |-- in_reply_to_user_id_str: string (nullable = true)\n |-- is_quote_status: boolean (nullable = true)\n |-- lang: string (nullable = true)\n |-- place: struct (nullable = true)\n |    |-- bounding_box: struct (nullable = true)\n |    |    |-- coordinates: array (nullable = true)\n |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |    |-- element: double (containsNull = true)\n |    |    |-- type: string (nullable = true)\n |    |-- country: string (nullable = true)\n |    |-- country_code: string (nullable = true)\n |    |-- full_name: string (nullable = true)\n |    |-- id: string (nullable = true)\n |    |-- name: string (nullable = true)\n |    |-- place_type: string (nullable = true)\n |    |-- url: string (nullable = true)\n |-- possibly_sensitive: boolean (nullable = true)\n |-- quoted_status: struct (nullable = true)\n |    |-- contributors: string (nullable = true)\n |    |-- coordinates: struct (nullable = true)\n |    |    |-- coordinates: array (nullable = true)\n |    |    |    |-- element: double (containsNull = true)\n |    |    |-- type: string (nullable = true)\n |    |-- created_at: string (nullable = true)\n |    |-- entities: struct (nullable = true)\n |    |    |-- hashtags: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- text: string (nullable = true)\n |    |    |-- media: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- media_url: string (nullable = true)\n |    |    |    |    |-- media_url_https: string (nullable = true)\n |    |    |    |    |-- sizes: struct (nullable = true)\n |    |    |    |    |    |-- large: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- medium: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- small: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- thumb: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- source_status_id: long (nullable = true)\n |    |    |    |    |-- source_status_id_str: string (nullable = true)\n |    |    |    |    |-- source_user_id: long (nullable = true)\n |    |    |    |    |-- source_user_id_str: string (nullable = true)\n |    |    |    |    |-- type: string (nullable = true)\n |    |    |    |    |-- url: string (nullable = true)\n |    |    |-- symbols: array (nullable = true)\n |    |    |    |-- element: string (containsNull = true)\n |    |    |-- urls: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- url: string (nullable = true)\n |    |    |-- user_mentions: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- name: string (nullable = true)\n |    |    |    |    |-- screen_name: string (nullable = true)\n |    |-- extended_entities: struct (nullable = true)\n |    |    |-- media: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- media_url: string (nullable = true)\n |    |    |    |    |-- media_url_https: string (nullable = true)\n |    |    |    |    |-- sizes: struct (nullable = true)\n |    |    |    |    |    |-- large: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- medium: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- small: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- thumb: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- source_status_id: long (nullable = true)\n |    |    |    |    |-- source_status_id_str: string (nullable = true)\n |    |    |    |    |-- source_user_id: long (nullable = true)\n |    |    |    |    |-- source_user_id_str: string (nullable = true)\n |    |    |    |    |-- type: string (nullable = true)\n |    |    |    |    |-- url: string (nullable = true)\n |    |    |    |    |-- video_info: struct (nullable = true)\n |    |    |    |    |    |-- aspect_ratio: array (nullable = true)\n |    |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |    |-- duration_millis: long (nullable = true)\n |    |    |    |    |    |-- variants: array (nullable = true)\n |    |    |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |    |    |-- bitrate: long (nullable = true)\n |    |    |    |    |    |    |    |-- content_type: string (nullable = true)\n |    |    |    |    |    |    |    |-- url: string (nullable = true)\n |    |-- favorite_count: long (nullable = true)\n |    |-- favorited: boolean (nullable = true)\n |    |-- filter_level: string (nullable = true)\n |    |-- geo: struct (nullable = true)\n |    |    |-- coordinates: array (nullable = true)\n |    |    |    |-- element: double (containsNull = true)\n |    |    |-- type: string (nullable = true)\n |    |-- id: long (nullable = true)\n |    |-- id_str: string (nullable = true)\n |    |-- in_reply_to_screen_name: string (nullable = true)\n |    |-- in_reply_to_status_id: long (nullable = true)\n |    |-- in_reply_to_status_id_str: string (nullable = true)\n |    |-- in_reply_to_user_id: long (nullable = true)\n |    |-- in_reply_to_user_id_str: string (nullable = true)\n |    |-- is_quote_status: boolean (nullable = true)\n |    |-- lang: string (nullable = true)\n |    |-- place: struct (nullable = true)\n |    |    |-- bounding_box: struct (nullable = true)\n |    |    |    |-- coordinates: array (nullable = true)\n |    |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |    |    |-- element: double (containsNull = true)\n |    |    |    |-- type: string (nullable = true)\n |    |    |-- country: string (nullable = true)\n |    |    |-- country_code: string (nullable = true)\n |    |    |-- full_name: string (nullable = true)\n |    |    |-- id: string (nullable = true)\n |    |    |-- name: string (nullable = true)\n |    |    |-- place_type: string (nullable = true)\n |    |    |-- url: string (nullable = true)\n |    |-- possibly_sensitive: boolean (nullable = true)\n |    |-- quoted_status_id: long (nullable = true)\n |    |-- quoted_status_id_str: string (nullable = true)\n |    |-- retweet_count: long (nullable = true)\n |    |-- retweeted: boolean (nullable = true)\n |    |-- scopes: struct (nullable = true)\n |    |    |-- followers: boolean (nullable = true)\n |    |    |-- place_ids: array (nullable = true)\n |    |    |    |-- element: string (containsNull = true)\n |    |-- source: string (nullable = true)\n |    |-- text: string (nullable = true)\n |    |-- truncated: boolean (nullable = true)\n |    |-- user: struct (nullable = true)\n |    |    |-- contributors_enabled: boolean (nullable = true)\n |    |    |-- created_at: string (nullable = true)\n |    |    |-- default_profile: boolean (nullable = true)\n |    |    |-- default_profile_image: boolean (nullable = true)\n |    |    |-- description: string (nullable = true)\n |    |    |-- favourites_count: long (nullable = true)\n |    |    |-- follow_request_sent: string (nullable = true)\n |    |    |-- followers_count: long (nullable = true)\n |    |    |-- following: string (nullable = true)\n |    |    |-- friends_count: long (nullable = true)\n |    |    |-- geo_enabled: boolean (nullable = true)\n |    |    |-- id: long (nullable = true)\n |    |    |-- id_str: string (nullable = true)\n |    |    |-- is_translator: boolean (nullable = true)\n |    |    |-- lang: string (nullable = true)\n |    |    |-- listed_count: long (nullable = true)\n |    |    |-- location: string (nullable = true)\n |    |    |-- name: string (nullable = true)\n |    |    |-- notifications: string (nullable = true)\n |    |    |-- profile_background_color: string (nullable = true)\n |    |    |-- profile_background_image_url: string (nullable = true)\n |    |    |-- profile_background_image_url_https: string (nullable = true)\n |    |    |-- profile_background_tile: boolean (nullable = true)\n |    |    |-- profile_banner_url: string (nullable = true)\n |    |    |-- profile_image_url: string (nullable = true)\n |    |    |-- profile_image_url_https: string (nullable = true)\n |    |    |-- profile_link_color: string (nullable = true)\n |    |    |-- profile_sidebar_border_color: string (nullable = true)\n |    |    |-- profile_sidebar_fill_color: string (nullable = true)\n |    |    |-- profile_text_color: string (nullable = true)\n |    |    |-- profile_use_background_image: boolean (nullable = true)\n |    |    |-- protected: boolean (nullable = true)\n |    |    |-- screen_name: string (nullable = true)\n |    |    |-- statuses_count: long (nullable = true)\n |    |    |-- time_zone: string (nullable = true)\n |    |    |-- url: string (nullable = true)\n |    |    |-- utc_offset: long (nullable = true)\n |    |    |-- verified: boolean (nullable = true)\n |-- quoted_status_id: long (nullable = true)\n |-- quoted_status_id_str: string (nullable = true)\n |-- retweet_count: long (nullable = true)\n |-- retweeted: boolean (nullable = true)\n |-- retweeted_status: struct (nullable = true)\n |    |-- contributors: array (nullable = true)\n |    |    |-- element: long (containsNull = true)\n |    |-- coordinates: struct (nullable = true)\n |    |    |-- coordinates: array (nullable = true)\n |    |    |    |-- element: double (containsNull = true)\n |    |    |-- type: string (nullable = true)\n |    |-- created_at: string (nullable = true)\n |    |-- entities: struct (nullable = true)\n |    |    |-- hashtags: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- text: string (nullable = true)\n |    |    |-- media: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- media_url: string (nullable = true)\n |    |    |    |    |-- media_url_https: string (nullable = true)\n |    |    |    |    |-- sizes: struct (nullable = true)\n |    |    |    |    |    |-- large: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- medium: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- small: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- thumb: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- source_status_id: long (nullable = true)\n |    |    |    |    |-- source_status_id_str: string (nullable = true)\n |    |    |    |    |-- source_user_id: long (nullable = true)\n |    |    |    |    |-- source_user_id_str: string (nullable = true)\n |    |    |    |    |-- type: string (nullable = true)\n |    |    |    |    |-- url: string (nullable = true)\n |    |    |-- symbols: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- text: string (nullable = true)\n |    |    |-- urls: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- url: string (nullable = true)\n |    |    |-- user_mentions: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- name: string (nullable = true)\n |    |    |    |    |-- screen_name: string (nullable = true)\n |    |-- extended_entities: struct (nullable = true)\n |    |    |-- media: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |-- media_url: string (nullable = true)\n |    |    |    |    |-- media_url_https: string (nullable = true)\n |    |    |    |    |-- sizes: struct (nullable = true)\n |    |    |    |    |    |-- large: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- medium: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- small: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- thumb: struct (nullable = true)\n |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |-- source_status_id: long (nullable = true)\n |    |    |    |    |-- source_status_id_str: string (nullable = true)\n |    |    |    |    |-- source_user_id: long (nullable = true)\n |    |    |    |    |-- source_user_id_str: string (nullable = true)\n |    |    |    |    |-- type: string (nullable = true)\n |    |    |    |    |-- url: string (nullable = true)\n |    |    |    |    |-- video_info: struct (nullable = true)\n |    |    |    |    |    |-- aspect_ratio: array (nullable = true)\n |    |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |    |-- duration_millis: long (nullable = true)\n |    |    |    |    |    |-- variants: array (nullable = true)\n |    |    |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |    |    |-- bitrate: long (nullable = true)\n |    |    |    |    |    |    |    |-- content_type: string (nullable = true)\n |    |    |    |    |    |    |    |-- url: string (nullable = true)\n |    |-- favorite_count: long (nullable = true)\n |    |-- favorited: boolean (nullable = true)\n |    |-- filter_level: string (nullable = true)\n |    |-- geo: struct (nullable = true)\n |    |    |-- coordinates: array (nullable = true)\n |    |    |    |-- element: double (containsNull = true)\n |    |    |-- type: string (nullable = true)\n |    |-- id: long (nullable = true)\n |    |-- id_str: string (nullable = true)\n |    |-- in_reply_to_screen_name: string (nullable = true)\n |    |-- in_reply_to_status_id: long (nullable = true)\n |    |-- in_reply_to_status_id_str: string (nullable = true)\n |    |-- in_reply_to_user_id: long (nullable = true)\n |    |-- in_reply_to_user_id_str: string (nullable = true)\n |    |-- is_quote_status: boolean (nullable = true)\n |    |-- lang: string (nullable = true)\n |    |-- place: struct (nullable = true)\n |    |    |-- bounding_box: struct (nullable = true)\n |    |    |    |-- coordinates: array (nullable = true)\n |    |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |    |    |-- element: double (containsNull = true)\n |    |    |    |-- type: string (nullable = true)\n |    |    |-- country: string (nullable = true)\n |    |    |-- country_code: string (nullable = true)\n |    |    |-- full_name: string (nullable = true)\n |    |    |-- id: string (nullable = true)\n |    |    |-- name: string (nullable = true)\n |    |    |-- place_type: string (nullable = true)\n |    |    |-- url: string (nullable = true)\n |    |-- possibly_sensitive: boolean (nullable = true)\n |    |-- quoted_status: struct (nullable = true)\n |    |    |-- contributors: string (nullable = true)\n |    |    |-- coordinates: struct (nullable = true)\n |    |    |    |-- coordinates: array (nullable = true)\n |    |    |    |    |-- element: double (containsNull = true)\n |    |    |    |-- type: string (nullable = true)\n |    |    |-- created_at: string (nullable = true)\n |    |    |-- entities: struct (nullable = true)\n |    |    |    |-- hashtags: array (nullable = true)\n |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |    |-- text: string (nullable = true)\n |    |    |    |-- media: array (nullable = true)\n |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |    |-- media_url: string (nullable = true)\n |    |    |    |    |    |-- media_url_https: string (nullable = true)\n |    |    |    |    |    |-- sizes: struct (nullable = true)\n |    |    |    |    |    |    |-- large: struct (nullable = true)\n |    |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |    |-- medium: struct (nullable = true)\n |    |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |    |-- small: struct (nullable = true)\n |    |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |    |-- thumb: struct (nullable = true)\n |    |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- source_status_id: long (nullable = true)\n |    |    |    |    |    |-- source_status_id_str: string (nullable = true)\n |    |    |    |    |    |-- source_user_id: long (nullable = true)\n |    |    |    |    |    |-- source_user_id_str: string (nullable = true)\n |    |    |    |    |    |-- type: string (nullable = true)\n |    |    |    |    |    |-- url: string (nullable = true)\n |    |    |    |-- symbols: array (nullable = true)\n |    |    |    |    |-- element: string (containsNull = true)\n |    |    |    |-- urls: array (nullable = true)\n |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |    |-- url: string (nullable = true)\n |    |    |    |-- user_mentions: array (nullable = true)\n |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |    |-- name: string (nullable = true)\n |    |    |    |    |    |-- screen_name: string (nullable = true)\n |    |    |-- extended_entities: struct (nullable = true)\n |    |    |    |-- media: array (nullable = true)\n |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |-- display_url: string (nullable = true)\n |    |    |    |    |    |-- expanded_url: string (nullable = true)\n |    |    |    |    |    |-- id: long (nullable = true)\n |    |    |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |    |    |-- indices: array (nullable = true)\n |    |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |    |-- media_url: string (nullable = true)\n |    |    |    |    |    |-- media_url_https: string (nullable = true)\n |    |    |    |    |    |-- sizes: struct (nullable = true)\n |    |    |    |    |    |    |-- large: struct (nullable = true)\n |    |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |    |-- medium: struct (nullable = true)\n |    |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |    |-- small: struct (nullable = true)\n |    |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |    |-- thumb: struct (nullable = true)\n |    |    |    |    |    |    |    |-- h: long (nullable = true)\n |    |    |    |    |    |    |    |-- resize: string (nullable = true)\n |    |    |    |    |    |    |    |-- w: long (nullable = true)\n |    |    |    |    |    |-- source_status_id: long (nullable = true)\n |    |    |    |    |    |-- source_status_id_str: string (nullable = true)\n |    |    |    |    |    |-- source_user_id: long (nullable = true)\n |    |    |    |    |    |-- source_user_id_str: string (nullable = true)\n |    |    |    |    |    |-- type: string (nullable = true)\n |    |    |    |    |    |-- url: string (nullable = true)\n |    |    |    |    |    |-- video_info: struct (nullable = true)\n |    |    |    |    |    |    |-- aspect_ratio: array (nullable = true)\n |    |    |    |    |    |    |    |-- element: long (containsNull = true)\n |    |    |    |    |    |    |-- duration_millis: long (nullable = true)\n |    |    |    |    |    |    |-- variants: array (nullable = true)\n |    |    |    |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |    |    |    |-- bitrate: long (nullable = true)\n |    |    |    |    |    |    |    |    |-- content_type: string (nullable = true)\n |    |    |    |    |    |    |    |    |-- url: string (nullable = true)\n |    |    |-- favorite_count: long (nullable = true)\n |    |    |-- favorited: boolean (nullable = true)\n |    |    |-- filter_level: string (nullable = true)\n |    |    |-- geo: struct (nullable = true)\n |    |    |    |-- coordinates: array (nullable = true)\n |    |    |    |    |-- element: double (containsNull = true)\n |    |    |    |-- type: string (nullable = true)\n |    |    |-- id: long (nullable = true)\n |    |    |-- id_str: string (nullable = true)\n |    |    |-- in_reply_to_screen_name: string (nullable = true)\n |    |    |-- in_reply_to_status_id: long (nullable = true)\n |    |    |-- in_reply_to_status_id_str: string (nullable = true)\n |    |    |-- in_reply_to_user_id: long (nullable = true)\n |    |    |-- in_reply_to_user_id_str: string (nullable = true)\n |    |    |-- is_quote_status: boolean (nullable = true)\n |    |    |-- lang: string (nullable = true)\n |    |    |-- place: struct (nullable = true)\n |    |    |    |-- bounding_box: struct (nullable = true)\n |    |    |    |    |-- coordinates: array (nullable = true)\n |    |    |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |    |    |    |-- element: double (containsNull = true)\n |    |    |    |    |-- type: string (nullable = true)\n |    |    |    |-- country: string (nullable = true)\n |    |    |    |-- country_code: string (nullable = true)\n |    |    |    |-- full_name: string (nullable = true)\n |    |    |    |-- id: string (nullable = true)\n |    |    |    |-- name: string (nullable = true)\n |    |    |    |-- place_type: string (nullable = true)\n |    |    |    |-- url: string (nullable = true)\n |    |    |-- possibly_sensitive: boolean (nullable = true)\n |    |    |-- quoted_status_id: long (nullable = true)\n |    |    |-- quoted_status_id_str: string (nullable = true)\n |    |    |-- retweet_count: long (nullable = true)\n |    |    |-- retweeted: boolean (nullable = true)\n |    |    |-- scopes: struct (nullable = true)\n |    |    |    |-- followers: boolean (nullable = true)\n |    |    |-- source: string (nullable = true)\n |    |    |-- text: string (nullable = true)\n |    |    |-- truncated: boolean (nullable = true)\n |    |    |-- user: struct (nullable = true)\n |    |    |    |-- contributors_enabled: boolean (nullable = true)\n |    |    |    |-- created_at: string (nullable = true)\n |    |    |    |-- default_profile: boolean (nullable = true)\n |    |    |    |-- default_profile_image: boolean (nullable = true)\n |    |    |    |-- description: string (nullable = true)\n |    |    |    |-- favourites_count: long (nullable = true)\n |    |    |    |-- follow_request_sent: string (nullable = true)\n |    |    |    |-- followers_count: long (nullable = true)\n |    |    |    |-- following: string (nullable = true)\n |    |    |    |-- friends_count: long (nullable = true)\n |    |    |    |-- geo_enabled: boolean (nullable = true)\n |    |    |    |-- id: long (nullable = true)\n |    |    |    |-- id_str: string (nullable = true)\n |    |    |    |-- is_translator: boolean (nullable = true)\n |    |    |    |-- lang: string (nullable = true)\n |    |    |    |-- listed_count: long (nullable = true)\n |    |    |    |-- location: string (nullable = true)\n |    |    |    |-- name: string (nullable = true)\n |    |    |    |-- notifications: string (nullable = true)\n |    |    |    |-- profile_background_color: string (nullable = true)\n |    |    |    |-- profile_background_image_url: string (nullable = true)\n |    |    |    |-- profile_background_image_url_https: string (nullable = true)\n |    |    |    |-- profile_background_tile: boolean (nullable = true)\n |    |    |    |-- profile_banner_url: string (nullable = true)\n |    |    |    |-- profile_image_url: string (nullable = true)\n |    |    |    |-- profile_image_url_https: string (nullable = true)\n |    |    |    |-- profile_link_color: string (nullable = true)\n |    |    |    |-- profile_sidebar_border_color: string (nullable = true)\n |    |    |    |-- profile_sidebar_fill_color: string (nullable = true)\n |    |    |    |-- profile_text_color: string (nullable = true)\n |    |    |    |-- profile_use_background_image: boolean (nullable = true)\n |    |    |    |-- protected: boolean (nullable = true)\n |    |    |    |-- screen_name: string (nullable = true)\n |    |    |    |-- statuses_count: long (nullable = true)\n |    |    |    |-- time_zone: string (nullable = true)\n |    |    |    |-- url: string (nullable = true)\n |    |    |    |-- utc_offset: long (nullable = true)\n |    |    |    |-- verified: boolean (nullable = true)\n |    |-- quoted_status_id: long (nullable = true)\n |    |-- quoted_status_id_str: string (nullable = true)\n |    |-- retweet_count: long (nullable = true)\n |    |-- retweeted: boolean (nullable = true)\n |    |-- scopes: struct (nullable = true)\n |    |    |-- followers: boolean (nullable = true)\n |    |    |-- place_ids: array (nullable = true)\n |    |    |    |-- element: string (containsNull = true)\n |    |-- source: string (nullable = true)\n |    |-- text: string (nullable = true)\n |    |-- truncated: boolean (nullable = true)\n |    |-- user: struct (nullable = true)\n |    |    |-- contributors_enabled: boolean (nullable = true)\n |    |    |-- created_at: string (nullable = true)\n |    |    |-- default_profile: boolean (nullable = true)\n |    |    |-- default_profile_image: boolean (nullable = true)\n |    |    |-- description: string (nullable = true)\n |    |    |-- favourites_count: long (nullable = true)\n |    |    |-- follow_request_sent: string (nullable = true)\n |    |    |-- followers_count: long (nullable = true)\n |    |    |-- following: string (nullable = true)\n |    |    |-- friends_count: long (nullable = true)\n |    |    |-- geo_enabled: boolean (nullable = true)\n |    |    |-- id: long (nullable = true)\n |    |    |-- id_str: string (nullable = true)\n |    |    |-- is_translator: boolean (nullable = true)\n |    |    |-- lang: string (nullable = true)\n |    |    |-- listed_count: long (nullable = true)\n |    |    |-- location: string (nullable = true)\n |    |    |-- name: string (nullable = true)\n |    |    |-- notifications: string (nullable = true)\n |    |    |-- profile_background_color: string (nullable = true)\n |    |    |-- profile_background_image_url: string (nullable = true)\n |    |    |-- profile_background_image_url_https: string (nullable = true)\n |    |    |-- profile_background_tile: boolean (nullable = true)\n |    |    |-- profile_banner_url: string (nullable = true)\n |    |    |-- profile_image_url: string (nullable = true)\n |    |    |-- profile_image_url_https: string (nullable = true)\n |    |    |-- profile_link_color: string (nullable = true)\n |    |    |-- profile_sidebar_border_color: string (nullable = true)\n |    |    |-- profile_sidebar_fill_color: string (nullable = true)\n |    |    |-- profile_text_color: string (nullable = true)\n |    |    |-- profile_use_background_image: boolean (nullable = true)\n |    |    |-- protected: boolean (nullable = true)\n |    |    |-- screen_name: string (nullable = true)\n |    |    |-- statuses_count: long (nullable = true)\n |    |    |-- time_zone: string (nullable = true)\n |    |    |-- url: string (nullable = true)\n |    |    |-- utc_offset: long (nullable = true)\n |    |    |-- verified: boolean (nullable = true)\n |-- scopes: struct (nullable = true)\n |    |-- place_ids: array (nullable = true)\n |    |    |-- element: string (containsNull = true)\n |-- source: string (nullable = true)\n |-- text: string (nullable = true)\n |-- timestamp_ms: string (nullable = true)\n |-- truncated: boolean (nullable = true)\n |-- user: struct (nullable = true)\n |    |-- contributors_enabled: boolean (nullable = true)\n |    |-- created_at: string (nullable = true)\n |    |-- default_profile: boolean (nullable = true)\n |    |-- default_profile_image: boolean (nullable = true)\n |    |-- description: string (nullable = true)\n |    |-- favourites_count: long (nullable = true)\n |    |-- follow_request_sent: string (nullable = true)\n |    |-- followers_count: long (nullable = true)\n |    |-- following: string (nullable = true)\n |    |-- friends_count: long (nullable = true)\n |    |-- geo_enabled: boolean (nullable = true)\n |    |-- id: long (nullable = true)\n |    |-- id_str: string (nullable = true)\n |    |-- is_translator: boolean (nullable = true)\n |    |-- lang: string (nullable = true)\n |    |-- listed_count: long (nullable = true)\n |    |-- location: string (nullable = true)\n |    |-- name: string (nullable = true)\n |    |-- notifications: string (nullable = true)\n |    |-- profile_background_color: string (nullable = true)\n |    |-- profile_background_image_url: string (nullable = true)\n |    |-- profile_background_image_url_https: string (nullable = true)\n |    |-- profile_background_tile: boolean (nullable = true)\n |    |-- profile_banner_url: string (nullable = true)\n |    |-- profile_image_url: string (nullable = true)\n |    |-- profile_image_url_https: string (nullable = true)\n |    |-- profile_link_color: string (nullable = true)\n |    |-- profile_sidebar_border_color: string (nullable = true)\n |    |-- profile_sidebar_fill_color: string (nullable = true)\n |    |-- profile_text_color: string (nullable = true)\n |    |-- profile_use_background_image: boolean (nullable = true)\n |    |-- protected: boolean (nullable = true)\n |    |-- screen_name: string (nullable = true)\n |    |-- statuses_count: long (nullable = true)\n |    |-- time_zone: string (nullable = true)\n |    |-- url: string (nullable = true)\n |    |-- utc_offset: long (nullable = true)\n |    |-- verified: boolean (nullable = true)\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=25","http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=26"],"interpreterSettingId":"spark"}}},{"text":"tweets.limit(10).show()","user":"anonymous","dateUpdated":"2019-04-04T17:50:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211121_1491520723","id":"20180704-154500_1952221229","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4026","dateFinished":"2019-04-04T17:50:26+0000","dateStarted":"2019-04-04T17:50:20+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","datan|contributors|coordinates|          created_at|              delete|            entities|extended_entities|favorite_count|favorited|filter_level| geo|                id|            id_str|in_reply_to_screen_name|in_reply_to_status_id|in_reply_to_status_id_str|in_reply_to_user_id|in_reply_to_user_id_str|is_quote_status|lang|place|possibly_sensitive|       quoted_status|  quoted_status_id|quoted_status_id_str|retweet_count|retweeted|retweeted_status|scopes|              source|                                    text| timestamp_ms|truncated|                user|\n+------------+-----------+--------------------+--------------------+--------------------+-----------------+--------------+---------+------------+----+------------------+------------------+-----------------------+---------------------+-------------------------+-------------------+-----------------------+---------------+----+-----+------------------+--------------------+------------------+--------------------+-------------+---------+----------------+------+--------------------+----------------------------------------+-------------+---------+--------------------+\n|        null|       null|Fri Jul 29 08:00:...|                null|   [[],, [], [], []]|             null|             0|    false|         low|null|758935090894217216|758935090894217216|                   null|                 null|                     null|               null|                   null|          false|  en| null|              null|                null|              null|                null|            0|    false|            null|  null|<a href=\"https://...|                    Carrots coming in...|1469779200658|    false|[false, Thu May 2...|\n|        null|       null|Fri Jul 29 08:00:...|                null|   [[],, [], [], []]|             null|             0|    false|         low|null|758935090911072256|758935090911072256|                   null|                 null|                     null|               null|                   null|          false|  ja| null|              null|                null|              null|                null|            0|    false|            null|  null|<a href=\"http://t...|   明日朝から夕方暇な方いらっしゃいま...|1469779200662|    false|[false, Wed Apr 2...|\n|        null|       null|Fri Jul 29 08:00:...|                null|[[],, [], [[twitt...|             null|             0|    false|         low|null|758935090927849477|758935090927849477|                   null|                 null|                     null|               null|                   null|           true|  ja| null|             false|[,, Fri Jul 29 07...|758925763219300353|  758925763219300353|            0|    false|            null|  null|<a href=\"http://i...|              \\76trdf\n— ゆぐどらしる(...|1469779200666|    false|[false, Fri Jun 1...|\n|        null|       null|Fri Jul 29 08:00:...|                null|   [[],, [], [], []]|             null|             0|    false|         low|null|758935090927841280|758935090927841280|                   null|                 null|                     null|               null|                   null|          false|  ja| null|              null|                null|              null|                null|            0|    false|            null|  null|<a href=\"http://t...|          Tシャツ諦めようと思ってたのに…|1469779200666|    false|[false, Tue Mar 1...|\n|        null|       null|Fri Jul 29 08:00:...|                null|[[[[109, 114], عا...|             null|             0|    false|         low|null|758935090906882049|758935090906882049|                   null|                 null|                     null|               null|                   null|          false|  ar| null|             false|                null|              null|                null|            0|    false|            null|  null|<a href=\"http://t...|                    تراجع أسعار المست...|1469779200661|    false|[false, Thu Jun 2...|\n|        null|       null|Fri Jul 29 08:00:...|                null|   [[],, [], [], []]|             null|             0|    false|         low|null|758935090915270661|758935090915270661|                   null|                 null|                     null|               null|                   null|          false|  es| null|              null|                null|              null|                null|            0|    false|            null|  null|<a href=\"http://t...|                    Nos les pasa que ...|1469779200663|    false|[false, Sun Nov 0...|\n|        null|       null|                null|[[506459309773844...|                null|             null|          null|     null|        null|null|              null|              null|                   null|                 null|                     null|               null|                   null|           null|null| null|              null|                null|              null|                null|         null|     null|            null|  null|                null|                                    null|         null|     null|                null|\n|        null|       null|Fri Jul 29 08:00:...|                null|[[[[52, 62], KCAM...|             null|             0|    false|         low|null|758935090911031296|758935090911031296|                   null|                 null|                     null|               null|                   null|          false|  es| null|              null|                null|              null|                null|            0|    false|            null|  null|<a href=\"http://t...|                    Ya vote como 200 ...|1469779200662|    false|[false, Tue Dec 3...|\n|        null|       null|Fri Jul 29 08:00:...|                null|   [[],, [], [], []]|             null|             0|    false|         low|null|758935090911031297|758935090911031297|                   null|                 null|                     null|               null|                   null|          false|  ja| null|              null|                null|              null|                null|            0|    false|            null|  null|<a href=\"http://t...|          週末は！！定時帰りなのだ！！！|1469779200662|    false|[false, Tue Mar 2...|\n|        null|       null|Fri Jul 29 08:00:...|                null|   [[],, [], [], []]|             null|             0|    false|         low|null|758935090906882050|758935090906882050|                   null|                 null|                     null|               null|                   null|          false|  ja| null|              null|                null|              null|                null|            0|    false|            null|  null|<a href=\"http://t...|ファミコン版のリメイクとかかとおもってｔ|1469779200661|    false|[false, Tue Nov 2...|\nn\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=27"],"interpreterSettingId":"spark"}}},{"text":"%md\n### Challanges for working with the data\n\nThe highly nested and big structure of the JSON makes working with the data hard. Especially we have to cope with:\n* Nested structures\n* Arrays\n* Arrays of Arrays\n\nLet's address one item after another.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Challanges for working with the data</h3>\n<p>The highly nested and big structure of the JSON makes working with the data hard. Especially we have to cope with:</p>\n<ul>\n<li>Nested structures</li>\n<li>Arrays</li>\n<li>Arrays of Arrays</li>\n</ul>\n<p>Let's address one item after another.</p>\n"}]},"apps":[],"jobName":"paragraph_1554400211121_1154608737","id":"20180704-154519_1668113985","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4027"},{"text":"%md\n## 2. Addressing Nested Structures\n\nSo the first question that arises is how to address nested data. This is fairly simple, the JSON path can be specified using a dot notation:\n","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>2. Addressing Nested Structures</h2>\n<p>So the first question that arises is how to address nested data. This is fairly simple, the JSON path can be specified using a dot notation:</p>\n"}]},"apps":[],"jobName":"paragraph_1554400211121_889092845","id":"20180704-154714_850759450","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4028"},{"text":"val result = (tweets.select($\"created_at\", $\"place.country_code\" as \"country_code\", $\"entities.media.display_url\")\n    .where($\"display_url\" isNotNull)\n    .where($\"country_code\" isNotNull)\n)\n\nz.show(result.limit(10))\n","user":"anonymous","dateUpdated":"2019-04-04T17:51:28+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"created_at":"string","country_code":"string","display_url":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211121_2048656015","id":"20180704-154814_1118470462","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4029","dateFinished":"2019-04-04T17:51:29+0000","dateStarted":"2019-04-04T17:51:28+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there were two feature warnings; re-run with -feature for details\nresult: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [created_at: string, country_code: string ... 1 more field]\n"},{"type":"TABLE","data":"created_at\tcountry_code\tdisplay_url\nFri Jul 29 08:00:04 +0000 2016\tGB\tWrappedArray(pic.twitter.com/ZM4wo6Jhal)\nFri Jul 29 08:00:07 +0000 2016\tTR\tWrappedArray(pic.twitter.com/ewqg7QSCmE)\nFri Jul 29 08:00:12 +0000 2016\tIN\tWrappedArray(pic.twitter.com/aXoHaqCASc)\nFri Jul 29 08:00:16 +0000 2016\tUS\tWrappedArray(pic.twitter.com/6doVVgZ7Pn)\nFri Jul 29 08:00:30 +0000 2016\tES\tWrappedArray(pic.twitter.com/s3feBTQcEr)\nFri Jul 29 08:00:33 +0000 2016\tGB\tWrappedArray(pic.twitter.com/faEXKCK9m7)\nFri Jul 29 08:45:06 +0000 2016\tTR\tWrappedArray(pic.twitter.com/XDl2N05lCX)\nFri Jul 29 08:45:14 +0000 2016\tIN\tWrappedArray(pic.twitter.com/HGWD8o1S5E)\nFri Jul 29 08:45:22 +0000 2016\tJP\tWrappedArray(pic.twitter.com/8fTi2zwIPM)\nFri Jul 29 08:45:38 +0000 2016\tTR\tWrappedArray(pic.twitter.com/F9VEdMfpRl)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=28"],"interpreterSettingId":"spark"}}},{"text":"result.printSchema()","user":"anonymous","dateUpdated":"2019-04-04T17:51:35+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211122_1358444228","id":"20180704-160226_1706207431","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4030","dateFinished":"2019-04-04T17:51:36+0000","dateStarted":"2019-04-04T17:51:35+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- created_at: string (nullable = true)\n |-- country_code: string (nullable = true)\n |-- display_url: array (nullable = true)\n |    |-- element: string (containsNull = true)\n\n"}]}},{"text":"%md\n## 3. Unpacking Structs\n\nSometimes you want to lift a couple of nested elements to the top. This can be done fairly easily as follows","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>3. Unpacking Structs</h2>\n<p>Sometimes you want to lift a couple of nested elements to the top. This can be done fairly easily as follows</p>\n"}]},"apps":[],"jobName":"paragraph_1554400211122_-219182849","id":"20180704-155755_976729331","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4031"},{"text":"val result = tweets.select($\"created_at\", $\"place.*\").where($\"country\" isNotNull)\n\nz.show(result.limit(10))","user":"anonymous","dateUpdated":"2019-04-04T17:51:49+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"created_at":"string","bounding_box":"string","country":"string","country_code":"string","full_name":"string","id":"string","name":"string","place_type":"string","url":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211122_968780233","id":"20180704-155839_600489148","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4032","dateFinished":"2019-04-04T17:51:50+0000","dateStarted":"2019-04-04T17:51:49+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one feature warning; re-run with -feature for details\nresult: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [created_at: string, bounding_box: struct<coordinates: array<array<array<double>>>, type: string> ... 7 more fields]\n"},{"type":"TABLE","data":"created_at\tbounding_box\tcountry\tcountry_code\tfull_name\tid\tname\tplace_type\turl\nFri Jul 29 08:00:00 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(-82.644739, 37.201483), WrappedArray(-82.644739, 40.638802), WrappedArray(-77.71893, 40.638802), WrappedArray(-77.71893, 37.201483))),Polygon]\tUnited States\tUS\tWest Virginia, USA\t2d83c71ce16cd187\tWest Virginia\tadmin\thttps://api.twitter.com/1.1/geo/id/2d83c71ce16cd187.json\nFri Jul 29 08:00:02 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(4.553437, 51.800955), WrappedArray(4.553437, 51.847217), WrappedArray(4.671566, 51.847217), WrappedArray(4.671566, 51.800955))),Polygon]\tNederland\tNL\tZwijndrecht, Nederland\tc070630160df8aec\tZwijndrecht\tcity\thttps://api.twitter.com/1.1/geo/id/c070630160df8aec.json\nFri Jul 29 08:00:02 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(136.754058, 35.898107), WrappedArray(136.754058, 36.393171), WrappedArray(137.653128, 36.393171), WrappedArray(137.653128, 35.898107))),Polygon]\t日本\tJP\t岐阜 高山市\t8a253824064f531c\t高山市\tcity\thttps://api.twitter.com/1.1/geo/id/8a253824064f531c.json\nFri Jul 29 08:00:03 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(-73.807197, 40.881294), WrappedArray(-73.807197, 40.988329), WrappedArray(-73.755414, 40.988329), WrappedArray(-73.755414, 40.881294))),Polygon]\tUnited States\tUS\tNew Rochelle, NY\t11cdb607ab2f17bb\tNew Rochelle\tcity\thttps://api.twitter.com/1.1/geo/id/11cdb607ab2f17bb.json\nFri Jul 29 08:00:04 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(0.793555, 51.622712), WrappedArray(0.793555, 51.644501), WrappedArray(0.83152, 51.644501), WrappedArray(0.83152, 51.622712))),Polygon]\tUnited Kingdom\tGB\tBurnham-on-Crouch, East\t17be14e8030813bb\tBurnham-on-Crouch\tcity\thttps://api.twitter.com/1.1/geo/id/17be14e8030813bb.json\nFri Jul 29 08:00:06 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(-118.369186, 33.872914), WrappedArray(-118.369186, 33.902665), WrappedArray(-118.343796, 33.902665), WrappedArray(-118.343796, 33.872914))),Polygon]\tUnited States\tUS\tLawndale, CA\tcce33d74ceffbe08\tLawndale\tcity\thttps://api.twitter.com/1.1/geo/id/cce33d74ceffbe08.json\nFri Jul 29 08:00:07 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(-4.029331, 51.598748), WrappedArray(-4.029331, 51.68983), WrappedArray(-3.862139, 51.68983), WrappedArray(-3.862139, 51.598748))),Polygon]\tUnited Kingdom\tGB\tSwansea, Wales\t1f36c2b60fbc98ac\tSwansea\tcity\thttps://api.twitter.com/1.1/geo/id/1f36c2b60fbc98ac.json\nFri Jul 29 08:00:07 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(29.63199, 36.193221), WrappedArray(29.63199, 36.207176), WrappedArray(29.667441, 36.207176), WrappedArray(29.667441, 36.193221))),Polygon]\tTürkiye\tTR\tKaş, Türkiye\t2d6605987fa4b4da\tKaş\tcity\thttps://api.twitter.com/1.1/geo/id/2d6605987fa4b4da.json\nFri Jul 29 08:00:08 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(139.562887, 35.711731), WrappedArray(139.562887, 35.779999), WrappedArray(139.681129, 35.779999), WrappedArray(139.681129, 35.711731))),Polygon]\t日本\tJP\t東京 練馬区\tdcc2630623880f96\t練馬区\tcity\thttps://api.twitter.com/1.1/geo/id/dcc2630623880f96.json\nFri Jul 29 08:00:10 +0000 2016\t[WrappedArray(WrappedArray(WrappedArray(-0.74578, 51.448222), WrappedArray(-0.74578, 52.992679), WrappedArray(1.768936, 52.992679), WrappedArray(1.768936, 51.448222))),Polygon]\tUnited Kingdom\tGB\tEast, England\t3bc1b6cfd27ef7f6\tEast\tadmin\thttps://api.twitter.com/1.1/geo/id/3bc1b6cfd27ef7f6.json\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=29"],"interpreterSettingId":"spark"}}},{"text":"result.printSchema()","user":"anonymous","dateUpdated":"2019-04-04T17:51:56+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211122_-761341559","id":"20180704-160244_310247267","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4033","dateFinished":"2019-04-04T17:51:56+0000","dateStarted":"2019-04-04T17:51:56+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- created_at: string (nullable = true)\n |-- bounding_box: struct (nullable = true)\n |    |-- coordinates: array (nullable = true)\n |    |    |-- element: array (containsNull = true)\n |    |    |    |-- element: array (containsNull = true)\n |    |    |    |    |-- element: double (containsNull = true)\n |    |-- type: string (nullable = true)\n |-- country: string (nullable = true)\n |-- country_code: string (nullable = true)\n |-- full_name: string (nullable = true)\n |-- id: string (nullable = true)\n |-- name: string (nullable = true)\n |-- place_type: string (nullable = true)\n |-- url: string (nullable = true)\n\n"}]}},{"text":"%md\n## 4. Unpacking Arrays\n\nOften it is desirable to unpack an array, i.e. create separate records for all entries in an array. This can be done with the `explode` or `explode_outer` function.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>4. Unpacking Arrays</h2>\n<p>Often it is desirable to unpack an array, i.e. create separate records for all entries in an array. This can be done with the <code>explode</code> or <code>explode_outer</code> function.</p>\n"}]},"apps":[],"jobName":"paragraph_1554400211122_1038146012","id":"20180704-154951_1932672658","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4034"},{"text":"val result = tweets.select($\"created_at\", explode($\"entities.media\") as \"media\").where($\"media.display_url\" isNotNull)\n\nz.show(result.limit(10))","user":"anonymous","dateUpdated":"2019-04-04T17:52:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"created_at":"string","media":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211123_-490506863","id":"20180704-155524_316915102","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4035","dateFinished":"2019-04-04T17:52:12+0000","dateStarted":"2019-04-04T17:52:10+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one feature warning; re-run with -feature for details\nresult: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [created_at: string, media: struct<display_url: string, expanded_url: string ... 12 more fields>]\n"},{"type":"TABLE","data":"created_at\tmedia\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/SjEsowj5Rn,http://twitter.com/BBBubbleBee_/status/758878514447654916/photo/1,758878502628134912,758878502628134912,WrappedArray(139, 140),http://pbs.twimg.com/media/CogT-jjUkAAiqXU.jpg,https://pbs.twimg.com/media/CogT-jjUkAAiqXU.jpg,[[241,fit,429],[241,fit,429],[241,fit,429],[150,crop,150]],758878514447654916,758878514447654916,1685126227,1685126227,photo,https://t.co/SjEsowj5Rn]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/dRddyBXGou,http://twitter.com/ygent_official/status/758890052298477569/photo/1,758880846791086081,758880846791086081,WrappedArray(139, 140),http://pbs.twimg.com/media/CogWHAPUkAExKZg.jpg,https://pbs.twimg.com/media/CogWHAPUkAExKZg.jpg,[[720,fit,1080],[720,fit,1080],[453,fit,680],[150,crop,150]],758890052298477569,758890052298477569,408177579,408177579,photo,https://t.co/dRddyBXGou]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/msHhI6QoNn,http://twitter.com/WorldAndScience/status/758713645786247168/photo/1,757402981855789057,757402981855789057,WrappedArray(80, 103),http://pbs.twimg.com/media/CoLV_8VWAAE5azV.jpg,https://pbs.twimg.com/media/CoLV_8VWAAE5azV.jpg,[[559,fit,1050],[559,fit,1050],[362,fit,680],[150,crop,150]],758713645786247168,758713645786247168,511402689,511402689,photo,https://t.co/msHhI6QoNn]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/lgB9VE8DT6,http://twitter.com/AviRaina/status/758908104176087040/photo/1,758908085054255105,758908085054255105,WrappedArray(139, 140),http://pbs.twimg.com/media/Cogu4erUsAEku9n.jpg,https://pbs.twimg.com/media/Cogu4erUsAEku9n.jpg,[[899,fit,1440],[749,fit,1200],[425,fit,680],[150,crop,150]],758908104176087040,758908104176087040,359889598,359889598,photo,https://t.co/lgB9VE8DT6]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/LEhuxhvphv,http://twitter.com/TheAnnyeongOppa/status/758934472670654464/photo/1,758934379796115456,758934379796115456,WrappedArray(70, 93),http://pbs.twimg.com/media/CohGzCOUMAA0qoX.jpg,https://pbs.twimg.com/media/CohGzCOUMAA0qoX.jpg,[[447,fit,474],[447,fit,474],[447,fit,474],[150,crop,150]],758934472670654464,758934472670654464,718971291936563200,718971291936563200,photo,https://t.co/LEhuxhvphv]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/ogWqtBhPTX,http://twitter.com/MrSimonAllen/status/758921953881169920/photo/1,758921820045058049,758921820045058049,WrappedArray(100, 123),http://pbs.twimg.com/media/Cog7X9gUIAE1WGQ.jpg,https://pbs.twimg.com/media/Cog7X9gUIAE1WGQ.jpg,[[1072,fit,1912],[673,fit,1200],[381,fit,680],[150,crop,150]],758921953881169920,758921953881169920,466760430,466760430,photo,https://t.co/ogWqtBhPTX]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/6gURM3WMZV,http://twitter.com/TEAM_LAN/status/758466395206094848/photo/1,758466059229728768,758466059229728768,WrappedArray(139, 140),http://pbs.twimg.com/media/Coac3MKUEAAUb17.png,https://pbs.twimg.com/media/Coac3MKUEAAUb17.png,[[1000,fit,2000],[600,fit,1200],[340,fit,680],[150,crop,150]],758466395206094848,758466395206094848,369827280,369827280,photo,https://t.co/6gURM3WMZV]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/1wOnTBddQV,http://twitter.com/OMGTSN/status/752935188355702784/photo/1,752935142138589184,752935142138589184,WrappedArray(53, 76),http://pbs.twimg.com/media/CnL2hcYUMAA4GPF.jpg,https://pbs.twimg.com/media/CnL2hcYUMAA4GPF.jpg,[[1054,fit,1080],[1054,fit,1080],[664,fit,680],[150,crop,150]],752935188355702784,752935188355702784,24053093,24053093,photo,https://t.co/1wOnTBddQV]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/dr7UbllKxP,http://twitter.com/Mehrzad_12/status/758868273068781568/photo/1,758868267230298113,758868267230298113,WrappedArray(113, 136),http://pbs.twimg.com/media/CogKqxuUAAEoO6y.jpg,https://pbs.twimg.com/media/CogKqxuUAAEoO6y.jpg,[[405,fit,720],[405,fit,720],[383,fit,680],[150,crop,150]],758868273068781568,758868273068781568,148006248,148006248,photo,https://t.co/dr7UbllKxP]\nFri Jul 29 08:00:00 +0000 2016\t[pic.twitter.com/pl7gvGlDhx,http://twitter.com/lordaedonis/status/758632550386413568/photo/1,758632543646195712,758632543646195712,WrappedArray(48, 71),http://pbs.twimg.com/media/Coc0R28VIAAKWKn.jpg,https://pbs.twimg.com/media/Coc0R28VIAAKWKn.jpg,[[768,fit,1024],[768,fit,1024],[510,fit,680],[150,crop,150]],758632550386413568,758632550386413568,4349621839,4349621839,photo,https://t.co/pl7gvGlDhx]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=30"],"interpreterSettingId":"spark"}}},{"text":"result.printSchema()","user":"anonymous","dateUpdated":"2019-04-04T17:52:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211123_628610971","id":"20180704-155541_1582297499","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4036","dateFinished":"2019-04-04T17:52:21+0000","dateStarted":"2019-04-04T17:52:20+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- created_at: string (nullable = true)\n |-- media: struct (nullable = true)\n |    |-- display_url: string (nullable = true)\n |    |-- expanded_url: string (nullable = true)\n |    |-- id: long (nullable = true)\n |    |-- id_str: string (nullable = true)\n |    |-- indices: array (nullable = true)\n |    |    |-- element: long (containsNull = true)\n |    |-- media_url: string (nullable = true)\n |    |-- media_url_https: string (nullable = true)\n |    |-- sizes: struct (nullable = true)\n |    |    |-- large: struct (nullable = true)\n |    |    |    |-- h: long (nullable = true)\n |    |    |    |-- resize: string (nullable = true)\n |    |    |    |-- w: long (nullable = true)\n |    |    |-- medium: struct (nullable = true)\n |    |    |    |-- h: long (nullable = true)\n |    |    |    |-- resize: string (nullable = true)\n |    |    |    |-- w: long (nullable = true)\n |    |    |-- small: struct (nullable = true)\n |    |    |    |-- h: long (nullable = true)\n |    |    |    |-- resize: string (nullable = true)\n |    |    |    |-- w: long (nullable = true)\n |    |    |-- thumb: struct (nullable = true)\n |    |    |    |-- h: long (nullable = true)\n |    |    |    |-- resize: string (nullable = true)\n |    |    |    |-- w: long (nullable = true)\n |    |-- source_status_id: long (nullable = true)\n |    |-- source_status_id_str: string (nullable = true)\n |    |-- source_user_id: long (nullable = true)\n |    |-- source_user_id_str: string (nullable = true)\n |    |-- type: string (nullable = true)\n |    |-- url: string (nullable = true)\n\n"}]}},{"text":"%md\n# 5. Collection Functions\n\nSpark 2.4 extended the support for arrays and maps by implementing many new SQL functions. Specifically so called *higher order functions* have been introduced which work similar to Spark/Scala `map`, `filter` and relaqted functions. Unfortunately many of these functions are not available in the Scala API, so we have to use SQL.\n\nLet us have a look at some examples how these new functions can help us while working with the tweets.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>5. Collection Functions</h1>\n<p>Spark 2.4 extended the support for arrays and maps by implementing many new SQL functions. Specifically so called <em>higher order functions</em> have been introduced which work similar to Spark/Scala <code>map</code>, <code>filter</code> and relaqted functions. Unfortunately many of these functions are not available in the Scala API, so we have to use SQL.</p>\n<p>Let us have a look at some examples how these new functions can help us while working with the tweets.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211123_1414410742","id":"20190404-165719_1571662602","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4037"},{"text":"tweets.cache()\ntweets.createOrReplaceTempView(\"tweets\")","user":"anonymous","dateUpdated":"2019-04-04T17:52:27+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res31: tweets.type = [contributors: string, coordinates: struct<coordinates: array<double>, type: string> ... 31 more fields]\n"}]},"apps":[],"jobName":"paragraph_1554400211123_1180644334","id":"20190404-165925_95820515","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4038","dateFinished":"2019-04-04T17:52:28+0000","dateStarted":"2019-04-04T17:52:27+0000"},{"text":"%md\n### Find tweets containing a specific hashtag with `array_contains`\n\nIn the first example, we are interested in all tweets that contain a specific hashtag. Hashtags are provided in the nested entity `entities.hashtags.text`, but this will be an array. Thanks to the new functions, we can easily check if that array contains a specific word.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Find tweets containing a specific hashtag with <code>array_contains</code></h3>\n<p>In the first example, we are interested in all tweets that contain a specific hashtag. Hashtags are provided in the nested entity <code>entities.hashtags.text</code>, but this will be an array. Thanks to the new functions, we can easily check if that array contains a specific word.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211123_1276144104","id":"20190404-171831_87235992","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4039"},{"text":"%sql\nSELECT\n    entities.hashtags.text\nFROM tweets\nWHERE array_contains(entities.hashtags.text, \"Jobs\")\nLIMIT 5","user":"anonymous","dateUpdated":"2019-04-04T17:52:39+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"text":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211124_-844301013","id":"20190404-171758_1745979585","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4040","dateFinished":"2019-04-04T17:52:40+0000","dateStarted":"2019-04-04T17:52:40+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"text\nWrappedArray(Jobs, Osnabrueck)\nWrappedArray(Jobs, Bielefeld)\nWrappedArray(OklahomaCityJobs, OklahomaCity, Jobs)\nWrappedArray(Austin, Jobs)\nWrappedArray(Jobs)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=31"],"interpreterSettingId":"spark"}}},{"text":"%md\n### Find tweets with long hashtags using `exists`\n\nNow let us try a more generic filter, where we want to inspect all tweets that contain at least one long hashtag with at least 20 characters. This can be achieved by using the higher order function `exists` which works similar to the Scala collection method `exists`. This method is much more flexible than `array_contains` since we do not need to speify a specifc word, but we can define an arbitrary predicate that is being checked.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Find tweets with long hashtags using <code>exists</code></h3>\n<p>Now let us try a more generic filter, where we want to inspect all tweets that contain at least one long hashtag with at least 20 characters. This can be achieved by using the higher order function <code>exists</code> which works similar to the Scala collection method <code>exists</code>. This method is much more flexible than <code>array_contains</code> since we do not need to speify a specifc word, but we can define an arbitrary predicate that is being checked.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211124_1595064020","id":"20190404-170611_1116435093","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4041"},{"text":"%sql\nSELECT\n    entities.hashtags.text\nFROM tweets\nWHERE exists(entities.hashtags, x -> length(x.text) > 20)\nLIMIT 5","user":"anonymous","dateUpdated":"2019-04-04T17:53:07+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"text":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211124_1280388557","id":"20190404-165738_1867224896","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4042","dateFinished":"2019-04-04T17:53:07+0000","dateStarted":"2019-04-04T17:53:07+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"text\nWrappedArray(KCAMexico, ValentinaZenereVillana)\nWrappedArray(Polizeiposten, Kieselbronn, Generalstaatsanwaltschaft, Karlsruhe, Jehovas, AnnaFeiler, LeonardaOpitz)\nWrappedArray(enlightenmentmovement)\nWrappedArray(SahabatIndonesiaSehat, ImunisasiSehat)\nWrappedArray(InternationalTigerDay)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=32"],"interpreterSettingId":"spark"}}},{"text":"%md\n### Keep only long hashtags using `filter`\n\nWhile `exists` only checks if an array contains an entry with some specific condition, the function `filter` allows us to remove all non-conforming entries from an array. This works very similar to the Scala method `filter`.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Keep only long hashtags using <code>filter</code></h3>\n<p>While <code>exists</code> only checks if an array contains an entry with some specific condition, the function <code>filter</code> allows us to remove all non-conforming entries from an array. This works very similar to the Scala method <code>filter</code>.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211124_813006047","id":"20190404-172309_1344591137","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4043"},{"text":"%sql\nSELECT\n    filter(entities.hashtags.text, x -> length(x) > 20)\nFROM tweets\nWHERE exists(entities.hashtags, x -> length(x.text) > 20)\nLIMIT 5","user":"anonymous","dateUpdated":"2019-04-04T17:53:24+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"filter(entities.hashtags.text AS `text`, lambdafunction((length(namedlambdavariable()) > 20), namedlambdavariable()))":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211125_-2038241297","id":"20190404-172306_655718289","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4044","dateFinished":"2019-04-04T17:53:25+0000","dateStarted":"2019-04-04T17:53:24+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"filter(entities.hashtags.text AS `text`, lambdafunction((length(namedlambdavariable()) > 20), namedlambdavariable()))\nWrappedArray(ValentinaZenereVillana)\nWrappedArray(Generalstaatsanwaltschaft)\nWrappedArray(enlightenmentmovement)\nWrappedArray(SahabatIndonesiaSehat)\nWrappedArray(InternationalTigerDay)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=33"],"interpreterSettingId":"spark"}}},{"text":"%md\n### Convert case of Hashtags using `transform`\n\nWe can use the function `transform` to specify a transformation that should be applied to every entry in an array. That means that `transform` works very similar to the Scala method `map` which also performs an element-wise transformation of a sequence.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Convert case of Hashtags using <code>transform</code></h3>\n<p>We can use the function <code>transform</code> to specify a transformation that should be applied to every entry in an array. That means that <code>transform</code> works very similar to the Scala method <code>map</code> which also performs an element-wise transformation of a sequence.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211125_605984779","id":"20190404-171411_896041674","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4045"},{"text":"%sql\nSELECT\n    transform(entities.hashtags.text, x -> upper(x))\nFROM tweets\nWHERE entities.hashtags.text[0] IS NOT NULL\nLIMIT 20","user":"anonymous","dateUpdated":"2019-04-04T17:54:00+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"transform(entities.hashtags.text AS `text`, lambdafunction(upper(namedlambdavariable()), namedlambdavariable()))":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211125_-509177643","id":"20190404-171432_2126846431","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4046","dateFinished":"2019-04-04T17:54:00+0000","dateStarted":"2019-04-04T17:54:00+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"transform(entities.hashtags.text AS `text`, lambdafunction(upper(namedlambdavariable()), namedlambdavariable()))\nWrappedArray(عاجل, السعودية)\nWrappedArray(KCAMEXICO, VALENTINAZENEREVILLANA)\nWrappedArray(SECURITY)\nWrappedArray(POLIZEIPOSTEN, KIESELBRONN, GENERALSTAATSANWALTSCHAFT, KARLSRUHE, JEHOVAS, ANNAFEILER, LEONARDAOPITZ)\nWrappedArray(UNPRETTYRAPSTAR3)\nWrappedArray(يوم_الجمعه)\nWrappedArray(LEEHI, 이하이, SEOULITE)\nWrappedArray(메이저놀이터, 네임드사다리사이트)\nWrappedArray(BTSINMANILA, TEAMBAHAY, TEAMIYAKNABES)\nWrappedArray(MTVHOTTEST)\nWrappedArray(THEMUSKETEERS)\nWrappedArray(プロテイン)\nWrappedArray(ENLIGHTENMENTMOVEMENT)\nWrappedArray(SMPMULINGPINAGTAGPO)\nWrappedArray(احلام)\nWrappedArray(FRIDAY, FLOWERS)\nWrappedArray(MOLINOFL)\nWrappedArray(موسكو, روسيا, حلب)\nWrappedArray(JIMIN, 갔다올게요)\nWrappedArray(METEO, VILLANOVADALBENGA, SAPEVATELO)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=34"],"interpreterSettingId":"spark"}}},{"text":"%md\n### Find longest hashtag using `aggregate`\n\nFinally Spark also provides an `aggregate` method for reducing an array to a single element. This works very similar to the Scala `foldLeft` method with an aggregation state (or accumulator) and a function which updates the accumulator. In this example we select the longest hashtag inside the array by a simple aggregation. The accumulator will contain the longest hashtag seen so far and will be updated once a longer hashtag is found.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Find longest hashtag using <code>aggregate</code></h3>\n<p>Finally Spark also provides an <code>aggregate</code> method for reducing an array to a single element. This works very similar to the Scala <code>foldLeft</code> method with an aggregation state (or accumulator) and a function which updates the accumulator. In this example we select the longest hashtag inside the array by a simple aggregation. The accumulator will contain the longest hashtag seen so far and will be updated once a longer hashtag is found.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211125_1879133821","id":"20190404-170738_380935028","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4047"},{"text":"%sql\nSELECT\n    aggregate(entities.hashtags.text, \"\", (acc, x) -> CASE WHEN length(x) > length(acc) THEN x ELSE acc END) AS longest_hashtag\nFROM tweets\nWHERE exists(entities.hashtags, x -> x IS NOT NULL)\nLIMIT 5","user":"anonymous","dateUpdated":"2019-04-04T17:54:06+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"longest_hashtag":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"longest_hashtag\nالسعودية\nValentinaZenereVillana\nsecurity\nGeneralstaatsanwaltschaft\nUnprettyRapstar3\n"}]},"apps":[],"jobName":"paragraph_1554400211126_1037486147","id":"20190404-170640_1017816523","dateCreated":"2019-04-04T17:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4048","dateFinished":"2019-04-04T17:54:06+0000","dateStarted":"2019-04-04T17:54:06+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-200-101-39.eu-central-1.compute.internal:4040/jobs/job?id=35"],"interpreterSettingId":"spark"}}},{"text":"%md\n# 5. Working with Hive\n\nSupport for nested data is not only provided by Spark, but Hive also supports that to a certain extend. This is also required since some important file formats like Parquet, ORC, JSON and Avro all support nested data.\n\nAlthough Hive was originally meant to be in line with a classical data warehouse containing (possibly wide but) flat tables, support for nested structures have been added. This is true both for the Hive meta store which only stores the structural information and file location and also for the Hive execution engine, although the later is lacking behind as compared to Spark. Different execution engines like Impala, Drill, Presto etc will also specific levels of support for nested data. Presto for example offers a very good support, which actually was used as a template by the Spark developers for their functionality introduced with Spark 2.4.","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>5. Working with Hive</h1>\n<p>Support for nested data is not only provided by Spark, but Hive also supports that to a certain extend. This is also required since some important file formats like Parquet, ORC, JSON and Avro all support nested data.</p>\n<p>Although Hive was originally meant to be in line with a classical data warehouse containing (possibly wide but) flat tables, support for nested structures have been added. This is true both for the Hive meta store which only stores the structural information and file location and also for the Hive execution engine, although the later is lacking behind as compared to Spark. Different execution engines like Impala, Drill, Presto etc will also specific levels of support for nested data. Presto for example offers a very good support, which actually was used as a template by the Spark developers for their functionality introduced with Spark 2.4.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211126_1621395561","id":"20180704-160301_1039604398","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4049"},{"text":"%md\n### Write Tweets to Hive Table","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Write Tweets to Hive Table</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211126_-139116535","id":"20190404-174324_747902637","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4050"},{"text":"tweets.write.format(\"parquet\").saveAsTable(\"tweets\")","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1554400211126_2057699774","id":"20190404-152940_141176272","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4051"},{"text":"%md\n### Inspect Schema","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Inspect Schema</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1554400211127_-592099835","id":"20190404-174309_95705262","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4052"},{"text":"%sql\nDESCRIBE tweets\n","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"col_name":"string","data_type":"string","comment":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"col_name\tdata_type\tcomment\ncontributors\tstring\tnull\ncoordinates\tstruct<coordinates:array<double>,type:string>\tnull\ncreated_at\tstring\tnull\ndelete\tstruct<status:struct<id:bigint,id_str:string,user_id:bigint,user_id_str:string>,timestamp_ms:string>\tnull\nentities\tstruct<hashtags:array<struct<indices:array<bigint>,text:string>>,media:array<struct<display_url:string,expanded_url:string,id:bigint,id_str:string,indices:array<bigint>,media_url:string,media_url_https:string,sizes:struct<large:struct<h:bigint,resize:string,w:bigint>,medium:struct<h:bigint,resize:string,w:bigint>,small:struct<h:bigint,resize:string,w:bigint>,thumb:struct<h:bigint,resize:string,w:bigint>>,source_status_id:bigint,source_status_id_str:string,source_user_id:bigint,source_user_id_str:string,type:string,url:string>>,symbols:array<struct<indices:array<bigint>,text:string>>,urls:array<struct<display_url:string,expanded_url:string,indices:array<bigint>,url:string>>,user_mentions:array<struct<id:bigint,id_str:string,indices:array<bigint>,name:string,screen_name:string>>>\tnull\nextended_entities\tstruct<media:array<struct<display_url:string,expanded_url:string,id:bigint,id_str:string,indices:array<bigint>,media_url:string,media_url_https:string,sizes:struct<large:struct<h:bigint,resize:string,w:bigint>,medium:struct<h:bigint,resize:string,w:bigint>,small:struct<h:bigint,resize:string,w:bigint>,thumb:struct<h:bigint,resize:string,w:bigint>>,source_status_id:bigint,source_status_id_str:string,source_user_id:bigint,source_user_id_str:string,type:string,url:string,video_info:struct<aspect_ratio:array<bigint>,duration_millis:bigint,variants:array<struct<bitrate:bigint,content_type:string,url:string>>>>>>\tnull\nfavorite_count\tbigint\tnull\nfavorited\tboolean\tnull\nfilter_level\tstring\tnull\ngeo\tstruct<coordinates:array<double>,type:string>\tnull\nid\tbigint\tnull\nid_str\tstring\tnull\nin_reply_to_screen_name\tstring\tnull\nin_reply_to_status_id\tbigint\tnull\nin_reply_to_status_id_str\tstring\tnull\nin_reply_to_user_id\tbigint\tnull\nin_reply_to_user_id_str\tstring\tnull\nis_quote_status\tboolean\tnull\nlang\tstring\tnull\nplace\tstruct<bounding_box:struct<coordinates:array<array<array<double>>>,type:string>,country:string,country_code:string,full_name:string,id:string,name:string,place_type:string,url:string>\tnull\npossibly_sensitive\tboolean\tnull\nquoted_status\tstruct<contributors:string,coordinates:struct<coordinates:array<double>,type:string>,created_at:string,entities:struct<hashtags:array<struct<indices:array<bigint>,text:string>>,media:array<struct<display_url:string,expanded_url:string,id:bigint,id_str:string,indices:array<bigint>,media_url:string,media_url_https:string,sizes:struct<large:struct<h:bigint,resize:string,w:bigint>,medium:struct<h:bigint,resize:string,w:bigint>,small:struct<h:bigint,resize:string,w:bigint>,thumb:struct<h:bigint,resize:string,w:bigint>>,source_status_id:bigint,source_status_id_str:string,source_user_id:bigint,source_user_id_str:string,type:string,url:string>>,symbols:array<string>,urls:array<struct<display_url:string,expanded_url:string,indices:array<bigint>,url:string>>,user_mentions:array<struct<id:bigint,id_str:string,indices:array<bigint>,name:string,screen_name:string>>>,extended_entities:struct<media:array<struct<display_url:string,expanded_url:string,id:bigint,id_str:string,indices:array<bigint>,media_url:string,media_url_https:string,sizes:struct<large:struct<h:bigint,resize:string,w:bigint>,medium:struct<h:bigint,resize:string,w:bigint>,small:struct<h:bigint,resize:string,w:bigint>,thumb:struct<h:bigint,resize:string,w:bigint>>,source_status_id:bigint,source_status_id_str:string,source_user_id:bigint,source_user_id_str:string,type:string,url:string,video_info:struct<aspect_ratio:array<bigint>,duration_millis:bigint,variants:array<struct<bitrate:bigint,content_type:string,url:string>>>>>>,favorite_count:bigint,favorited:boolean,filter_level:string,geo:struct<coordinates:array<double>,type:string>,id:bigint,id_str:string,in_reply_to_screen_name:string,in_reply_to_status_id:bigint,in_reply_to_status_id_str:string,in_reply_to_user_id:bigint,in_reply_to_user_id_str:string,is_quote_status:boolean,lang:string,place:struct<bounding_box:struct<coordinates:array<array<array<double>>>,type:string>,country:string,country_code:string,full_name:string,id:string,name:string,place_type:string,url:string>,possibly_sensitive:boolean,quoted_status_id:bigint,quoted_status_id_str:string,retweet_count:bigint,retweeted:boolean,... 5 more fields>\tnull\nquoted_status_id\tbigint\tnull\nquoted_status_id_str\tstring\tnull\nretweet_count\tbigint\tnull\nretweeted\tboolean\tnull\nretweeted_status\tstruct<contributors:array<bigint>,coordinates:struct<coordinates:array<double>,type:string>,created_at:string,entities:struct<hashtags:array<struct<indices:array<bigint>,text:string>>,media:array<struct<display_url:string,expanded_url:string,id:bigint,id_str:string,indices:array<bigint>,media_url:string,media_url_https:string,sizes:struct<large:struct<h:bigint,resize:string,w:bigint>,medium:struct<h:bigint,resize:string,w:bigint>,small:struct<h:bigint,resize:string,w:bigint>,thumb:struct<h:bigint,resize:string,w:bigint>>,source_status_id:bigint,source_status_id_str:string,source_user_id:bigint,source_user_id_str:string,type:string,url:string>>,symbols:array<struct<indices:array<bigint>,text:string>>,urls:array<struct<display_url:string,expanded_url:string,indices:array<bigint>,url:string>>,user_mentions:array<struct<id:bigint,id_str:string,indices:array<bigint>,name:string,screen_name:string>>>,extended_entities:struct<media:array<struct<display_url:string,expanded_url:string,id:bigint,id_str:string,indices:array<bigint>,media_url:string,media_url_https:string,sizes:struct<large:struct<h:bigint,resize:string,w:bigint>,medium:struct<h:bigint,resize:string,w:bigint>,small:struct<h:bigint,resize:string,w:bigint>,thumb:struct<h:bigint,resize:string,w:bigint>>,source_status_id:bigint,source_status_id_str:string,source_user_id:bigint,source_user_id_str:string,type:string,url:string,video_info:struct<aspect_ratio:array<bigint>,duration_millis:bigint,variants:array<struct<bitrate:bigint,content_type:string,url:string>>>>>>,favorite_count:bigint,favorited:boolean,filter_level:string,geo:struct<coordinates:array<double>,type:string>,id:bigint,id_str:string,in_reply_to_screen_name:string,in_reply_to_status_id:bigint,in_reply_to_status_id_str:string,in_reply_to_user_id:bigint,in_reply_to_user_id_str:string,is_quote_status:boolean,lang:string,place:struct<bounding_box:struct<coordinates:array<array<array<double>>>,type:string>,country:string,country_code:string,full_name:string,id:string,name:string,place_type:string,url:string>,possibly_sensitive:boolean,quoted_status:struct<contributors:string,coordinates:struct<coordinates:array<double>,type:string>,created_at:string,entities:struct<hashtags:array<struct<indices:array<bigint>,text:string>>,media:array<struct<display_url:string,expanded_url:string,id:bigint,id_str:string,indices:array<bigint>,media_url:string,media_url_https:string,sizes:struct<large:struct<h:bigint,resize:string,w:bigint>,medium:struct<h:bigint,resize:string,w:bigint>,small:struct<h:bigint,resize:string,w:bigint>,thumb:struct<h:bigint,resize:string,w:bigint>>,source_status_id:bigint,source_status_id_str:string,source_user_id:bigint,source_user_id_str:string,type:string,url:string>>,symbols:array<string>,urls:array<struct<display_url:string,expanded_url:string,indices:array<bigint>,url:string>>,user_mentions:array<struct<id:bigint,id_str:string,indices:array<bigint>,name:string,screen_name:string>>>,extended_entities:struct<media:array<struct<display_url:string,expanded_url:string,id:bigint,id_str:string,indices:array<bigint>,media_url:string,media_url_https:string,sizes:struct<large:struct<h:bigint,resize:string,w:bigint>,medium:struct<h:bigint,resize:string,w:bigint>,small:struct<h:bigint,resize:string,w:bigint>,thumb:struct<h:bigint,resize:string,w:bigint>>,source_status_id:bigint,source_status_id_str:string,source_user_id:bigint,source_user_id_str:string,type:string,url:string,video_info:struct<aspect_ratio:array<bigint>,duration_millis:bigint,variants:array<struct<bitrate:bigint,content_type:string,url:string>>>>>>,favorite_count:bigint,favorited:boolean,filter_level:string,geo:struct<coordinates:array<double>,type:string>,id:bigint,id_str:string,in_reply_to_screen_name:string,in_reply_to_status_id:bigint,in_reply_to_status_id_str:string,in_reply_to_user_id:bigint,in_reply_to_user_id_str:string,is_quote_status:boolean,lang:string,place:struct<bounding_box:struct<coordinates:array<array<array<double>>>,type:string>,country:string,country_code:string,full_name:string,id:string,name:string,place_type:string,url:string>,possibly_sensitive:boolean,quoted_status_id:bigint,quoted_status_id_str:string,retweet_count:bigint,retweeted:boolean,... 5 more fields>,quoted_status_id:bigint,quoted_status_id_str:string,retweet_count:bigint,... 6 more fields>\tnull\nscopes\tstruct<place_ids:array<string>>\tnull\nsource\tstring\tnull\ntext\tstring\tnull\ntimestamp_ms\tstring\tnull\ntruncated\tboolean\tnull\nuser\tstruct<contributors_enabled:boolean,created_at:string,default_profile:boolean,default_profile_image:boolean,description:string,favourites_count:bigint,follow_request_sent:string,followers_count:bigint,following:string,friends_count:bigint,geo_enabled:boolean,id:bigint,id_str:string,is_translator:boolean,lang:string,listed_count:bigint,location:string,name:string,notifications:string,profile_background_color:string,profile_background_image_url:string,profile_background_image_url_https:string,profile_background_tile:boolean,profile_banner_url:string,... 14 more fields>\tnull\n"}]},"apps":[],"jobName":"paragraph_1554400211127_587266560","id":"20190404-153006_1759726621","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4053"},{"text":"%sql\nSELECT \n    entities.media[0].display_url\nFROM tweets\nWHERE entities.media[0].display_url IS NOT NULL\nLIMIT 5","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"entities.media AS `media`[0].display_url":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"entities.media AS `media`[0].display_url\npic.twitter.com/2FJfuUARJg\npic.twitter.com/AQEU6Un3pD\npic.twitter.com/is9BrCf0YI\npic.twitter.com/3yLLNPkN7E\npic.twitter.com/UW3ngSENTl\n"}]},"apps":[],"jobName":"paragraph_1554400211127_-1980704414","id":"20190404-153128_1909420138","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4054"},{"text":"%sql\n","user":"anonymous","dateUpdated":"2019-04-04T17:50:11+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554400211128_1777826786","id":"20190404-153642_1766653186","dateCreated":"2019-04-04T17:50:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4055"}],"name":"Spark DataFrame JSON - Full","id":"2E7JQKADX","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}