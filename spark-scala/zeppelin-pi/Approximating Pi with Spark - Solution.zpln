{"paragraphs":[{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485843945852_1925214105","id":"20170130-222545_897138231","dateCreated":"2017-01-30T22:25:45-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1113","text":"%md\n# Calculating Pi\n\nWe want to estimate the value of Pi using a Metropolis random sampling algorithm","dateUpdated":"2017-01-30T22:26:33-0800","dateFinished":"2017-01-30T22:26:30-0800","dateStarted":"2017-01-30T22:26:30-0800","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Calculating Pi</h1>\n<p>We want to estimate the value of Pi using a Metropolis random sampling algorithm</p>\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485843990211_530342811","id":"20170130-222630_975049135","dateCreated":"2017-01-30T22:26:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1184","dateUpdated":"2017-01-30T22:26:59-0800","dateFinished":"2017-01-30T22:26:57-0800","dateStarted":"2017-01-30T22:26:57-0800","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Local Approximation</h2>\n<p>First let's perform a local approximation using standard Scala methods.</p>\n"},"text":"%md\n## Local Approximation\n\nFirst let's perform a local approximation using standard Scala methods."},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485844017541_1952405395","id":"20170130-222657_829763029","dateCreated":"2017-01-30T22:26:57-0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1267","dateUpdated":"2017-01-30T22:27:08-0800","dateFinished":"2017-01-30T22:27:09-0800","dateStarted":"2017-01-30T22:27:08-0800","result":{"code":"SUCCESS","type":"TEXT","msg":"\nn: Int = 1000000\n\nhits: Int = 785479\n\npi: Float = 3.141916\n"},"text":"val n = 1000000\nval hits = (1 to n).view.map(x => {\n    val x = scala.util.Random.nextFloat()\n    val y = scala.util.Random.nextFloat()\n    if (x*x + y*y <= 1) 1 else 0\n}).reduce(_ + _) \nval pi = 4 * hits / n.toFloat"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485844028563_-895505964","id":"20170130-222708_1196508411","dateCreated":"2017-01-30T22:27:08-0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1358","dateUpdated":"2017-01-30T22:27:34-0800","dateFinished":"2017-01-30T22:27:32-0800","dateStarted":"2017-01-30T22:27:32-0800","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Spark Approximation</h2>\n<p>Now let's use Spark to perform a parallel and distributed approximation</p>\n"},"text":"%md\n## Spark Approximation\nNow let's use Spark to perform a parallel and distributed approximation"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485844052732_-1606106534","id":"20170130-222732_1112101428","dateCreated":"2017-01-30T22:27:32-0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1434","dateUpdated":"2017-01-30T22:27:45-0800","dateFinished":"2017-01-30T22:27:47-0800","dateStarted":"2017-01-30T22:27:45-0800","result":{"code":"SUCCESS","type":"TEXT","msg":"\nn: Int = 10000000\n\nhits: Int = 7854603\n\npi: Float = 3.1418412\n"},"text":"val n = 10000000\nval hits = sc.range(1,n, numSlices=64).map(x => {\n    val x = scala.util.Random.nextFloat()\n    val y = scala.util.Random.nextFloat()\n    if (x*x + y*y <= 1) 1 else 0\n}).reduce(_ + _) \nval pi = 4 * hits.toFloat / n.toFloat"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485844065376_2041559870","id":"20170130-222745_1622665674","dateCreated":"2017-01-30T22:27:45-0800","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1516"}],"name":"Approximating Pi with Spark - Solution","id":"2C7SBDYSH","angularObjects":{"2C73P7NJN:shared_process":[],"2C7KU6EWG:shared_process":[],"2C8H7AG7Q:shared_process":[],"2CANY5QMM:shared_process":[],"2C7YM9SBT:shared_process":[],"2CAHZM5EW:shared_process":[],"2CA194TC4:shared_process":[],"2C85Z5A3J:shared_process":[],"2C77BBC6M:shared_process":[],"2C9T8R64M:shared_process":[],"2C82H3SUX:shared_process":[],"2C7W1UTSM:shared_process":[],"2C99CAHNC:shared_process":[],"2C7VKNJZ3:shared_process":[],"2C7MNAP62:shared_process":[],"2C8SJ4SC1:shared_process":[],"2C8273BS9:shared_process":[],"2CA9V89Q3:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}