{"paragraphs":[{"text":"%md\n# Weather Data Analytics\nThis notebook performs some basic weather data analytics using the Spark DataFrame interface.","user":"anonymous","dateUpdated":"2019-05-22T11:57:25+0000","config":{"editorSetting":{},"editorMode":"ace/mode/markdown","colWidth":12,"editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Weather Data Analytics</h1>\n<p>This notebook performs some basic weather data analytics using the Spark DataFrame interface.</p>\n"}]},"apps":[],"jobName":"paragraph_1558526245036_-1327994230","id":"20160612-173621_1713564499","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:73075"},{"text":"// Common data location - adjust if not correct\nval storageLocation = \"s3://dimajix-training/data/weather\"","user":"anonymous","dateUpdated":"2019-05-22T11:57:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"storageLocation: String = s3://dimajix-training/data/weather\n"}]},"apps":[],"jobName":"paragraph_1558526245037_-42821138","id":"20160612-174608_1747052107","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73076"},{"text":"%md\n# Read in Weather Data\n\nFirst we need to read in all data. Data is stored in different directories for different years. Each directory contains one file per weather station. First lets peek into the single year `2003`, which is located at `storageLocation/2003`. This gives us a basic feeling for the data.\n\nSince the data is not CSV or something else, you need to use the `read.text` method, which will simply treat each line as a single column called `value`.\n\nStore the result in a variable `rawWeatherData2003` and display the first 10 lines using the Zepplin command `z.show`.","user":"anonymous","dateUpdated":"2019-05-22T11:57:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{"storageLocation":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Read in Weather Data</h1>\n<p>First we need to read in all data. Data is stored in different directories for different years. Each directory contains one file per weather station. First lets peek into the single year <code>2003</code>, which is located at <code>storageLocation/2003</code>. This gives us a basic feeling for the data.</p>\n<p>Since the data is not CSV or something else, you need to use the <code>read.text</code> method, which will simply treat each line as a single column called <code>value</code>.</p>\n<p>Store the result in a variable <code>rawWeatherData2003</code> and display the first 10 lines using the Zepplin command <code>z.show</code>.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558526245037_823788625","id":"20180310-111936_205472093","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73077"},{"text":"val rawWeatherData2003 = spark.read.text(s\"${storageLocation}/2003\")\nz.show(rawWeatherData2003.limit(10))\n","user":"anonymous","dateUpdated":"2019-05-22T11:57:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rawWeatherData2003: org.apache.spark.sql.DataFrame = [value: string]\n"},{"type":"TABLE","data":"value\n0494703160256242003010100003+55200-162717SY-MT+0029CDB  V0200105N00525010365MN0144005N1-00065-00225098065ADDAA101000595AA206999999GD11995+0079259GD23995+0103659GD34995+0259159GF108991999999008001999999GP10060005501024000001027005501024GQ100600786918849GR100600279914159MA1098075097701MD1810111+9999MW1715REMSYN088AAXX  01004 70316 11564 80110 11006 21022 39770 49806 58011 69901 771// 92353 555 90100;EQDN01 00040JPWTH 0QNNAA1D0 02026BA1 0 01026AA1D0 04034BA1 0 04034AA1D0 06085BA1 0 06085GA1 0 00034KA1D0 00028JA1 0-00022LA1 0 00900CA1 0 02896NA1 0 00040QA1 0 09806SA1D0 00031RA1 0-00006YA1 0 01010\n0228703160256242003010100174+55200-162730FM-16+0031PACD V0200201N004610102019N0144841N1-00201-00401999999ADDAA101000021GD12991+0027019GD23991+0102019GD34991+0144019GF108991999999999999999999MA1098041999999MW1711REMMET078PACD 010017Z 02009KT 9SM -SN FEW009 BKN034 OVC048 M02/M04 A2895 RMK AO2 P0000;EQDQ01+000003PRSWM1Q02    003PRSWM1\n044070316025624200301010053C+55200-162717FM-15+0029CDB  V0200105N00525015245MN0144005N1-00285-00565098025ADDAA101000025GD11995+0070159GD23995+0152459GD34995+0182959GF108991999999999999999999MA1098045999999MW1715REMMET095PACD 010053Z 01010KT 9SM -SN FEW023 BKN050 OVC060 M03/M06 A2895 RMK AO2 SLP802 P0000 T10281056;EQDQ01+000003PRSWM1Q02    003PRSWM1N01 00040JPWTH 0QNNAA1D0 02023BA1 0 01023AA1D0 04050BA1 0 04050AA1D0 06060BA1 0 06060GA1 0 00050KA1D0 00022JA1 0-00056LA1 0 00900CA1 0 02895NA1 0 00040QA1 0 09802SA1D0 00027RA1 0-00028YA1 0 01010\n0071703160256242003010101009+55200-162717NSRDB+002999999V020999999999999999999999999999+99999+99999999999ADDGP10060004201024000001027004201024GQ100600809920229GR100600224914159\n042770316025624200301010153C+55200-162717FM-15+0029CDB  V0200105N00625010365MN0160005N1-00225-00445098005ADDAA101000025GD11995+0039659GD23995+0103659GD34995+0140259GF108991999999999999999999MA1098005999999MW1001REMMET098PACD 010153Z 01012KT 10SM FEW013 BKN034 OVC046 M02/M04 A2894 RMK AO2 SNE17 SLP800 P0000 T10221044;EQDQ01+000000PRSWM2N01 00000JPWTH 0QNNAA1D0 02013BA1 0 01013AA1D0 04034BA1 0 04034AA1D0 06046BA1 0 06046GA1 0 00034KA1D0 00024JA1 0-00044LA1 0 01000CA1 0 02894NA1 0 00000QA1 0 09800SA1D0 00028RA1 0-00022YA1 0 01012\n0071703160256242003010102009+55200-162717NSRDB+002999999V020999999999999999999999999999+99999+99999999999ADDGP10060002001024000001027002001024GQ100600849921559GR100600125914159\n046870316025624200301010253C+55200-162717FM-15+0029CDB  V0200105N00725012195MN0160005N1-00335-00565097995ADDAA101000095AA203000021GD11995+0061059GD22995+0091459GD33995+0121959GF107991999999999999999999MA1097975999999MD1610081+9999MW1001REMMET098PACD 010253Z 01014KT 10SM FEW020 SCT030 BKN040 M03/M06 A2893 RMK AO2 SLP799 60000 T10331056 56008;EQDQ01+000000PRSWM2Q02  00008PRCP03N01 00000JPWTH 0QNNAA1D0 02020BA1 0 01020AA1D0 02030BA1 0 02030AA1D0 04040BA1 0 04040GA1 0 00040KA1D0 00022JA1 0-00056LA1 0 01000CA1 0 02893NA1 0 00000QA1 0 09799SA1D0 00026RA1 0-00033YA1 0 01014\n0071703160256242003010103009+55200-162717NSRDB+002999999V020999999999999999999999999999+99999+99999999999ADDGP10060000301024001001027000301024GQ100600887922499GR100600015906729\n041570316025624200301010353C+55200-162717FM-15+0029CDB  V0200205N00625010675MN0160005N1-00115-00335097985ADDAA101000095GD11995+0051859GD22995+0070159GD33995+0106759GF107991999999999999999999MA1097975999999MW1001REMMET086PACD 010353Z 02012KT 10SM FEW017 SCT023 BKN035 M01/M03 A2893 RMK AO2 SLP798 T10111033;EQDQ01+000000PRSWM2N01 00000JPWTH 0QNNAA1D0 02017BA1 0 01017AA1D0 02023BA1 0 02023AA1D0 04035BA1 0 04035GA1 0 00035KA1D0 00026JA1 0-00033LA1 0 01000CA1 0 02893NA1 0 00000QA1 0 09798SA1D0 00030RA1 0-00011YA1 0 02012\n0054703160256242003010104009+55200-162717NSRDB+002999999V020999999999999999999999999999+99999+99999999999ADDGP10060000001000000001000000001000GR100600000900009\n"}]},"apps":[],"jobName":"paragraph_1558526245037_-118704941","id":"20180310-112322_125525","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73078"},{"text":"%md\n### Read in all years\nNow we read in all years by creating a union. We also add the year as a logical partition column, this will be used later.\n\nIn order to read in all years, we use Scala functional programming, this makes things a lot more concise.","user":"anonymous","dateUpdated":"2019-05-22T11:57:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Read in all years</h3>\n<p>Now we read in all years by creating a union. We also add the year as a logical partition column, this will be used later.</p>\n<p>In order to read in all years, we use Scala functional programming, this makes things a lot more concise.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558526245038_-2034888203","id":"20180310-113423_29861183","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73079"},{"text":"val rawWeatherData = (2003 to 2014) map {i => spark.read.text(s\"${storageLocation}/${i}\").withColumn(\"year\", lit(i)) } reduce((l,r) => l.union(r))\nz.show(rawWeatherData.limit(10))","user":"anonymous","dateUpdated":"2019-05-22T11:57:34+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"value":"string","year":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}],"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rawWeatherData: org.apache.spark.sql.DataFrame = [value: string, year: int]\n"},{"type":"TABLE","data":"value\tyear\n0494703160256242003010100003+55200-162717SY-MT+0029CDB  V0200105N00525010365MN0144005N1-00065-00225098065ADDAA101000595AA206999999GD11995+0079259GD23995+0103659GD34995+0259159GF108991999999008001999999GP10060005501024000001027005501024GQ100600786918849GR100600279914159MA1098075097701MD1810111+9999MW1715REMSYN088AAXX  01004 70316 11564 80110 11006 21022 39770 49806 58011 69901 771// 92353 555 90100;EQDN01 00040JPWTH 0QNNAA1D0 02026BA1 0 01026AA1D0 04034BA1 0 04034AA1D0 06085BA1 0 06085GA1 0 00034KA1D0 00028JA1 0-00022LA1 0 00900CA1 0 02896NA1 0 00040QA1 0 09806SA1D0 00031RA1 0-00006YA1 0 01010\t2003\n0228703160256242003010100174+55200-162730FM-16+0031PACD V0200201N004610102019N0144841N1-00201-00401999999ADDAA101000021GD12991+0027019GD23991+0102019GD34991+0144019GF108991999999999999999999MA1098041999999MW1711REMMET078PACD 010017Z 02009KT 9SM -SN FEW009 BKN034 OVC048 M02/M04 A2895 RMK AO2 P0000;EQDQ01+000003PRSWM1Q02    003PRSWM1\t2003\n044070316025624200301010053C+55200-162717FM-15+0029CDB  V0200105N00525015245MN0144005N1-00285-00565098025ADDAA101000025GD11995+0070159GD23995+0152459GD34995+0182959GF108991999999999999999999MA1098045999999MW1715REMMET095PACD 010053Z 01010KT 9SM -SN FEW023 BKN050 OVC060 M03/M06 A2895 RMK AO2 SLP802 P0000 T10281056;EQDQ01+000003PRSWM1Q02    003PRSWM1N01 00040JPWTH 0QNNAA1D0 02023BA1 0 01023AA1D0 04050BA1 0 04050AA1D0 06060BA1 0 06060GA1 0 00050KA1D0 00022JA1 0-00056LA1 0 00900CA1 0 02895NA1 0 00040QA1 0 09802SA1D0 00027RA1 0-00028YA1 0 01010\t2003\n0071703160256242003010101009+55200-162717NSRDB+002999999V020999999999999999999999999999+99999+99999999999ADDGP10060004201024000001027004201024GQ100600809920229GR100600224914159\t2003\n042770316025624200301010153C+55200-162717FM-15+0029CDB  V0200105N00625010365MN0160005N1-00225-00445098005ADDAA101000025GD11995+0039659GD23995+0103659GD34995+0140259GF108991999999999999999999MA1098005999999MW1001REMMET098PACD 010153Z 01012KT 10SM FEW013 BKN034 OVC046 M02/M04 A2894 RMK AO2 SNE17 SLP800 P0000 T10221044;EQDQ01+000000PRSWM2N01 00000JPWTH 0QNNAA1D0 02013BA1 0 01013AA1D0 04034BA1 0 04034AA1D0 06046BA1 0 06046GA1 0 00034KA1D0 00024JA1 0-00044LA1 0 01000CA1 0 02894NA1 0 00000QA1 0 09800SA1D0 00028RA1 0-00022YA1 0 01012\t2003\n0071703160256242003010102009+55200-162717NSRDB+002999999V020999999999999999999999999999+99999+99999999999ADDGP10060002001024000001027002001024GQ100600849921559GR100600125914159\t2003\n046870316025624200301010253C+55200-162717FM-15+0029CDB  V0200105N00725012195MN0160005N1-00335-00565097995ADDAA101000095AA203000021GD11995+0061059GD22995+0091459GD33995+0121959GF107991999999999999999999MA1097975999999MD1610081+9999MW1001REMMET098PACD 010253Z 01014KT 10SM FEW020 SCT030 BKN040 M03/M06 A2893 RMK AO2 SLP799 60000 T10331056 56008;EQDQ01+000000PRSWM2Q02  00008PRCP03N01 00000JPWTH 0QNNAA1D0 02020BA1 0 01020AA1D0 02030BA1 0 02030AA1D0 04040BA1 0 04040GA1 0 00040KA1D0 00022JA1 0-00056LA1 0 01000CA1 0 02893NA1 0 00000QA1 0 09799SA1D0 00026RA1 0-00033YA1 0 01014\t2003\n0071703160256242003010103009+55200-162717NSRDB+002999999V020999999999999999999999999999+99999+99999999999ADDGP10060000301024001001027000301024GQ100600887922499GR100600015906729\t2003\n041570316025624200301010353C+55200-162717FM-15+0029CDB  V0200205N00625010675MN0160005N1-00115-00335097985ADDAA101000095GD11995+0051859GD22995+0070159GD33995+0106759GF107991999999999999999999MA1097975999999MW1001REMMET086PACD 010353Z 02012KT 10SM FEW017 SCT023 BKN035 M01/M03 A2893 RMK AO2 SLP798 T10111033;EQDQ01+000000PRSWM2N01 00000JPWTH 0QNNAA1D0 02017BA1 0 01017AA1D0 02023BA1 0 02023AA1D0 04035BA1 0 04035GA1 0 00035KA1D0 00026JA1 0-00033LA1 0 01000CA1 0 02893NA1 0 00000QA1 0 09798SA1D0 00030RA1 0-00011YA1 0 02012\t2003\n0054703160256242003010104009+55200-162717NSRDB+002999999V020999999999999999999999999999+99999+99999999999ADDGP10060000001000000001000000001000GR100600000900009\t2003\n"}]},"apps":[],"jobName":"paragraph_1558526245038_-552130634","id":"20160612-174154_349496240","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73080"},{"text":"%md\n## Extract Information\n\nThe raw data is not exactly nice to work with, so we need to extract the relevant information by using appropriate `substr` operations.","user":"anonymous","dateUpdated":"2019-05-22T11:57:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Extract Information</h2>\n<p>The raw data is not exactly nice to work with, so we need to extract the relevant information by using appropriate <code>substr</code> operations.</p>\n"}]},"apps":[],"jobName":"paragraph_1558526245038_2059019653","id":"20180310-113446_1901710073","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73081"},{"text":"import org.apache.spark.sql.types._\n\nval weatherData = rawWeatherData.select(\n    col(\"year\"),\n    substring(col(\"value\"),5,6) as \"usaf\",\n    substring(col(\"value\"),11,5) as \"wban\",\n    substring(col(\"value\"),16,8) as \"date\",\n    substring(col(\"value\"),24,4) as \"time\",\n    substring(col(\"value\"),42,5) as \"report_type\",\n    substring(col(\"value\"),61,3) as \"wind_direction\",\n    substring(col(\"value\"),64,1) as \"wind_direction_qual\",\n    substring(col(\"value\"),65,1) as \"wind_observation\",\n    substring(col(\"value\"),66,4).cast(FloatType) / lit(10.0) as \"wind_speed\",\n    substring(col(\"value\"),70,1) as \"wind_speed_qual\",\n    substring(col(\"value\"),88,5).cast(FloatType) / lit(10.0) as \"air_temperature\",\n    substring(col(\"value\"),93,1) as \"air_temperature_qual\"\n)\n\nz.show(weatherData.limit(10))","user":"anonymous","dateUpdated":"2019-05-22T11:57:34+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"result","index":0,"aggr":"sum"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"result","index":0,"aggr":"sum"}}}},{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"year":"string","usaf":"string","wban":"string","date":"string","time":"string","report_type":"string","wind_direction":"string","wind_direction_qual":"string","wind_observation":"string","wind_speed":"string","wind_speed_qual":"string","air_temperature":"string","air_temperature_qual":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}],"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.types._\nweatherData: org.apache.spark.sql.DataFrame = [year: int, usaf: string ... 11 more fields]\n"},{"type":"TABLE","data":"year\tusaf\twban\tdate\ttime\treport_type\twind_direction\twind_direction_qual\twind_observation\twind_speed\twind_speed_qual\tair_temperature\tair_temperature_qual\n2003\t703160\t25624\t20030101\t0000\tSY-MT\t010\t5\tN\t5.2\t5\t-0.6\t5\n2003\t703160\t25624\t20030101\t0017\tFM-16\t020\t1\tN\t4.6\t1\t-2.0\t1\n2003\t703160\t25624\t20030101\t0053\tFM-15\t010\t5\tN\t5.2\t5\t-2.8\t5\n2003\t703160\t25624\t20030101\t0100\tNSRDB\t999\t9\t9\t999.9\t9\t999.9\t9\n2003\t703160\t25624\t20030101\t0153\tFM-15\t010\t5\tN\t6.2\t5\t-2.2\t5\n2003\t703160\t25624\t20030101\t0200\tNSRDB\t999\t9\t9\t999.9\t9\t999.9\t9\n2003\t703160\t25624\t20030101\t0253\tFM-15\t010\t5\tN\t7.2\t5\t-3.3\t5\n2003\t703160\t25624\t20030101\t0300\tNSRDB\t999\t9\t9\t999.9\t9\t999.9\t9\n2003\t703160\t25624\t20030101\t0353\tFM-15\t020\t5\tN\t6.2\t5\t-1.1\t5\n2003\t703160\t25624\t20030101\t0400\tNSRDB\t999\t9\t9\t999.9\t9\t999.9\t9\n"}]},"apps":[],"jobName":"paragraph_1558526245038_-1337621595","id":"20160612-175008_182048218","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73082"},{"text":"%md\n# Read in Station Metadata\n\nFortunately station metadata is stored as CSV, so we can directly read that using Sparks `read.csv` mechanisum. You should also specify the DataFrameReader option `header` to be `true`, this will use the first line of the CSV for creating column names.\n\nStore the result in a variable called `stationData` and again print the first 10 lines using `z.show`.\n\n**Note** the countries are NOT ISO codes, they are FIPS-codes: [https://en.wikipedia.org/wiki/List_of_FIPS_country_codes](https://en.wikipedia.org/wiki/List_of_FIPS_country_codes)","user":"anonymous","dateUpdated":"2019-05-22T11:57:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","colWidth":12,"editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Read in Station Metadata</h1>\n<p>Fortunately station metadata is stored as CSV, so we can directly read that using Sparks <code>read.csv</code> mechanisum. You should also specify the DataFrameReader option <code>header</code> to be <code>true</code>, this will use the first line of the CSV for creating column names.</p>\n<p>Store the result in a variable called <code>stationData</code> and again print the first 10 lines using <code>z.show</code>.</p>\n<p><strong>Note</strong> the countries are NOT ISO codes, they are FIPS-codes: <a href=\"https://en.wikipedia.org/wiki/List_of_FIPS_country_codes\">https://en.wikipedia.org/wiki/List_of_FIPS_country_codes</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558526245038_867048926","id":"20160612-175533_1179463035","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73083"},{"text":"val stationData = spark.read\n    .option(\"header\",\"true\")\n    .csv(s\"${storageLocation}/isd-history\")\n    \nz.show(stationData.limit(10))","user":"anonymous","dateUpdated":"2019-05-22T11:57:35+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"result","index":0,"aggr":"sum"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"result","index":0,"aggr":"sum"}}}},{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"USAF":"string","WBAN":"string","STATION NAME":"string","CTRY":"string","STATE":"string","ICAO":"string","LAT":"string","LON":"string","ELEV(M)":"string","BEGIN":"string","END":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}],"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"stationData: org.apache.spark.sql.DataFrame = [USAF: string, WBAN: string ... 9 more fields]\n"},{"type":"TABLE","data":"USAF\tWBAN\tSTATION NAME\tCTRY\tSTATE\tICAO\tLAT\tLON\tELEV(M)\tBEGIN\tEND\n007005\t99999\tCWOS 07005\tnull\tnull\tnull\tnull\tnull\tnull\t20120127\t20120127\n007011\t99999\tCWOS 07011\tnull\tnull\tnull\tnull\tnull\tnull\t20111025\t20121129\n007018\t99999\tWXPOD 7018\tnull\tnull\tnull\t+00.000\t+000.000\t+7018.0\t20110309\t20130730\n007025\t99999\tCWOS 07025\tnull\tnull\tnull\tnull\tnull\tnull\t20120127\t20120127\n007026\t99999\tWXPOD 7026\tAF\tnull\tnull\t+00.000\t+000.000\t+7026.0\t20120713\t20141120\n007034\t99999\tCWOS 07034\tnull\tnull\tnull\tnull\tnull\tnull\t20121024\t20121106\n007037\t99999\tCWOS 07037\tnull\tnull\tnull\tnull\tnull\tnull\t20111202\t20121125\n007044\t99999\tCWOS 07044\tnull\tnull\tnull\tnull\tnull\tnull\t20120127\t20120127\n007047\t99999\tCWOS 07047\tnull\tnull\tnull\tnull\tnull\tnull\t20120613\t20120717\n007052\t99999\tCWOS 07052\tnull\tnull\tnull\tnull\tnull\tnull\t20121129\t20121130\n"}]},"apps":[],"jobName":"paragraph_1558526245039_-1616486096","id":"20160612-174633_119344646","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73084"},{"text":"%md\n# Analytics\n\nNow that we have everything in DataFrames, we can do the analysis easily.\n\n1. Load data as DataFrames (already done)\n2. Join both DataFrames `weatherData` and `stationData` on the station code (`wban` and `usaf`)\n3. Extract year from date (or use existing column)\n4. Project on relevant columns (`year`,`wind_speed`,`wind_speed_qual`,`air_temperature`,`air_temperature_qual`,`ctry`)\n5. Rename column `ctry` to `country`\n6. Group by country and year\n7. Aggregate minimum/maximum values for wind and temperature, pay attention to quality! You have to ignore values for which the quality is not \"1\"!\n8. Print the results, such that Zeppelin can make nice graphics :)\n \n**Again note** the countries are NOT ISO codes, they are FIPS-codes: [https://en.wikipedia.org/wiki/List_of_FIPS_country_codes](https://en.wikipedia.org/wiki/List_of_FIPS_country_codes), so don't be surprised if apparently the temperature of your country seems to be a little off.\n","user":"anonymous","dateUpdated":"2019-05-22T12:01:27+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"editorMode":"ace/mode/markdown","colWidth":12,"editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Analytics</h1>\n<p>Now that we have everything in DataFrames, we can do the analysis easily.</p>\n<ol>\n  <li>Load data as DataFrames (already done)</li>\n  <li>Join both DataFrames <code>weatherData</code> and <code>stationData</code> on the station code (<code>wban</code> and <code>usaf</code>)</li>\n  <li>Extract year from date (or use existing column)</li>\n  <li>Project on relevant columns (<code>year</code>,<code>wind_speed</code>,<code>wind_speed_qual</code>,<code>air_temperature</code>,<code>air_temperature_qual</code>,<code>ctry</code>)</li>\n  <li>Rename column <code>ctry</code> to <code>country</code></li>\n  <li>Group by country and year</li>\n  <li>Aggregate minimum/maximum values for wind and temperature, pay attention to quality! You have to ignore values for which the quality is not &ldquo;1&rdquo;!</li>\n  <li>Print the results, such that Zeppelin can make nice graphics :)</li>\n</ol>\n<p><strong>Again note</strong> the countries are NOT ISO codes, they are FIPS-codes: <a href=\"https://en.wikipedia.org/wiki/List_of_FIPS_country_codes\">https://en.wikipedia.org/wiki/List_of_FIPS_country_codes</a>, so don&rsquo;t be surprised if apparently the temperature of your country seems to be a little off.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558526245039_444123801","id":"20160612-175151_696167562","dateCreated":"2019-05-22T11:57:25+0000","dateStarted":"2019-05-22T12:01:27+0000","dateFinished":"2019-05-22T12:01:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:73085"},{"text":"val joined_weather = weatherData.join(stationData, weatherData(\"usaf\") === stationData(\"usaf\") && weatherData(\"wban\") === stationData(\"wban\"))\n    .select( \n        $\"year\",\n        $\"wind_speed_qual\",\n        $\"wind_speed\",\n        $\"air_temperature_qual\",\n        $\"air_temperature\",\n        $\"ctry\" as \"country\"\n    )\n\nval result = joined_weather.groupBy(\"country\", \"year\")\n  .agg(\n    min(when(col(\"wind_speed_qual\") === lit(1), col(\"wind_speed\"))) as \"min_wind_speed\",\n    max(when(col(\"wind_speed_qual\") === lit(1), col(\"wind_speed\"))) as \"max_wind_speed\",\n    min(when(col(\"air_temperature_qual\") === lit(1), col(\"air_temperature\"))) as \"min_temperature\",\n    max(when(col(\"air_temperature_qual\") === lit(1), col(\"air_temperature\"))) as \"max_temperature\"\n  )\n  \nz.show(result)","user":"anonymous","dateUpdated":"2019-05-22T11:57:35+0000","config":{"editorMode":"ace/mode/scala","colWidth":12,"results":[{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"country","index":0,"aggr":"sum"}],"values":[{"name":"min_wind_speed","index":2,"aggr":"min"},{"name":"max_wind_speed","index":3,"aggr":"max"},{"name":"min_temperature","index":4,"aggr":"min"},{"name":"max_temperature","index":5,"aggr":"max"}],"groups":[{"name":"year","index":1,"aggr":"sum"}],"scatter":{"xAxis":{"name":"country","index":0,"aggr":"sum"},"yAxis":{"name":"year","index":1,"aggr":"sum"}}}},{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"country":"string","year":"string","min_wind_speed":"string","max_wind_speed":"string","min_temperature":"string","max_temperature":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}],"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"joined_weather: org.apache.spark.sql.DataFrame = [year: int, wind_speed_qual: string ... 4 more fields]\nresult: org.apache.spark.sql.DataFrame = [country: string, year: int ... 4 more fields]\n"},{"type":"TABLE","data":"country\tyear\tmin_wind_speed\tmax_wind_speed\tmin_temperature\tmax_temperature\nCA\t2006\t0.0\t31.4\t-43.0\t35.9\nIC\t2013\t0.0\t25.0\t-11.0\t19.0\nSC\t2006\t0.0\t20.6\t20.0\t32.0\nUK\t2014\t0.0\t20.6\t-6.0\t30.4\nAM\t2011\t0.0\t14.0\t-16.0\t42.0\nSF\t2012\t0.0\t10.3\t2.2\t36.0\nNO\t2007\t0.0\t26.0\t-35.0\t29.0\nPO\t2010\t0.0\t21.6\t-1.6\t38.0\nFR\t2010\t0.0\t17.5\t-13.3\t36.1\nNL\t2012\t0.0\t28.8\t-18.4\t35.0\nGM\t2005\t0.0\t14.4\t-14.0\t31.0\nUS\t2006\t0.0\t37.0\t-43.0\t43.6\nAS\t2012\t0.0\t13.9\t0.1\t43.6\nDA\t2003\t0.0\t23.0\t-16.0\t30.0\nPL\t2008\t0.0\t25.7\t-14.0\t30.0\nNL\t2009\t0.0\t27.8\t-17.9\t34.8\nGK\t2013\t0.0\t20.1\t-1.5\t26.0\nSC\t2013\t0.0\t24.7\t20.0\t33.0\nUK\t2005\t0.0\t37.0\t-8.0\t32.4\nFR\t2014\t0.0\t16.5\t-9.0\t36.1\nIC\t2008\t0.0\t31.9\t-13.0\t22.0\nGK\t2005\t0.0\t19.0\t-1.3\t26.4\nFI\t2010\t0.0\t17.0\t-31.6\t32.6\nGM\t2004\t0.0\t16.5\t-10.2\t30.0\nEZ\t2003\t0.0\t16.5\t-16.0\t37.0\nLU\t2012\t0.0\t13.9\t-15.0\t35.0\nSW\t2014\t1.0\t16.0\t-34.5\t28.9\nBE\t2007\t0.0\t21.1\t-8.3\t33.0\nCA\t2013\t0.0\t23.1\t-44.0\t33.8\nIT\t2010\t0.0\t20.6\t-8.0\t21.0\nPL\t2012\t0.0\t13.4\t-27.0\t34.0\nUS\t2013\t0.0\t24.7\t-44.0\t45.5\nGM\t2013\t0.0\t14.4\t-10.0\t32.0\nGK\t2012\t0.0\t33.4\t-3.0\t26.0\nUS\t2004\t0.0\t28.3\t-46.0\t39.3\nJA\t2007\t0.0\t36.5\t-0.4\t34.5\nCH\t2009\t0.0\t12.0\t10.0\t33.0\nMY\t2014\t0.0\t9.8\t19.0\t36.0\nJA\t2003\t0.0\t21.6\t-0.7\t34.2\nIT\t2011\t0.0\t19.5\t-5.2\t25.0\nRS\t2006\t0.0\t11.0\t-38.0\t30.6\nGK\t2014\t0.0\t21.1\t2.0\t24.0\nMY\t2006\t0.0\t8.7\t3.0\t36.0\nNL\t2003\t0.0\t33.4\t-14.3\t36.0\nPO\t2007\t0.0\t13.9\t-1.0\t35.0\nLU\t2003\t0.0\t16.5\t-13.0\t37.4\nUS\t2011\t0.0\t36.0\t-44.0\t46.4\nSF\t2011\t0.0\t12.3\t2.3\t34.9\nSC\t2007\t0.0\t15.4\t22.0\t33.0\nFR\t2008\t0.0\t18.0\t-8.0\t34.5\nSW\t2010\t0.0\t18.0\t-41.7\t28.9\nLU\t2010\t0.0\t17.5\t-12.0\t35.0\nGP\t2010\t1.0\t11.8\t23.8\t31.6\nPL\t2013\t0.0\t16.0\t-18.0\t37.2\nRS\t2013\t0.0\t13.0\t-35.3\t32.0\nDA\t2011\t0.0\t22.6\t-13.1\t27.0\nAU\t2012\t0.0\t15.4\t-18.0\t34.2\nNL\t2013\t0.0\t37.1\t-14.4\t35.0\nDA\t2006\t0.0\t14.4\t-14.0\t32.7\nAM\t2005\t0.0\t14.0\t-19.0\t39.0\nUS\t2009\t0.0\t31.9\t-46.0\t41.6\nUK\t2010\t0.0\t19.0\t-17.0\t30.4\nPO\t2014\t0.0\t15.4\t-1.0\t32.0\nSF\t2005\t0.0\t11.8\t6.1\t38.2\nCH\t2006\t0.0\t13.0\t0.0\t35.0\nUK\t2009\t0.0\t24.2\t-9.0\t30.2\nRS\t2007\t0.0\t21.0\t-30.5\t31.0\nJA\t2012\t0.0\t33.4\t-1.5\t33.0\nEZ\t2004\t0.0\t17.0\t-20.1\t31.2\nUS\t2007\t0.0\t36.0\t-45.0\t41.7\nEZ\t2007\t0.0\t26.2\t-9.0\t35.2\nAU\t2007\t0.0\t13.4\t-10.4\t36.0\nSF\t2010\t0.0\t10.3\t3.1\t37.8\nSC\t2008\t0.0\t26.2\t20.0\t33.0\nSF\t2009\t0.0\t9.8\t2.8\t38.2\nPL\t2014\t0.0\t14.9\t-15.0\t32.0\nGM\t2008\t0.0\t15.9\t-7.0\t31.0\nAM\t2013\t0.0\t14.0\t-19.0\t38.0\nSW\t2003\t0.0\t20.0\t-40.2\t28.6\nBE\t2013\t0.0\t16.5\t-12.0\t35.0\nGK\t2008\t0.0\t22.6\t-0.3\t24.0\nCA\t2010\t0.0\t25.7\t-43.2\t34.0\nJA\t2005\t0.0\t31.9\t0.2\t33.2\nUK\t2007\t0.0\t25.7\t-6.4\t29.0\nPL\t2011\t0.0\t13.9\t-18.0\t33.0\nCH\t2010\t0.0\t20.0\t12.0\t34.0\nUK\t2013\t0.0\t20.1\t-13.0\t33.1\nNL\t2011\t0.0\t31.4\t-8.2\t34.0\nAM\t2014\t0.0\t16.0\t-19.0\t39.0\nSC\t2014\t0.0\t30.4\t20.0\t32.0\nFR\t2007\t0.0\t18.0\t-13.7\t34.4\nRS\t2005\t0.0\t12.0\t-27.0\t29.0\nAM\t2008\t0.0\t13.0\t-27.0\t40.0\nAU\t2010\t0.0\t14.9\t-13.6\t35.0\nAU\t2003\t0.0\t22.6\t-17.6\t37.4\nIT\t2009\t0.0\t20.6\t-8.0\t25.0\nMY\t2010\t0.0\t9.8\t23.0\t37.0\nFI\t2014\t0.0\t18.0\t-28.6\t30.3\nSF\t2006\t0.0\t13.4\t6.3\t37.6\nSW\t2005\t0.0\t18.0\t-33.6\t28.6\nSC\t2003\t0.0\t23.1\t21.0\t33.0\nFI\t2004\t0.0\t12.9\t-25.0\t25.0\nAS\t2004\t0.0\t14.0\t1.6\t44.1\nLU\t2005\t0.0\t13.4\t-13.0\t32.0\nPL\t2005\t0.0\t20.6\t-21.0\t33.4\nCH\t2007\t0.0\t15.0\t10.0\t34.0\nCH\t2008\t0.0\t16.0\t12.0\t33.0\nIT\t2013\t0.0\t21.6\t-11.8\t24.0\nMY\t2008\t0.0\t9.3\t21.0\t35.0\nUK\t2003\t0.0\t22.0\t-7.2\t37.4\nIC\t2007\t0.0\t30.9\t-10.0\t18.0\nRS\t2009\t0.0\t18.0\t-30.9\t31.4\nIC\t2011\t0.0\t31.9\t-14.0\t17.2\nCH\t2014\t0.0\t15.0\t11.0\t34.0\nNO\t2011\t0.0\t38.6\t-37.8\t29.0\nBE\t2003\t0.0\t19.0\t-11.3\t36.3\nIC\t2003\t0.0\t30.9\t-9.0\t20.0\nDA\t2012\t0.0\t17.5\t-19.4\t30.0\nLU\t2004\t0.0\t13.9\t-8.4\t31.0\nAU\t2004\t0.0\t13.4\t-14.4\t32.5\nSW\t2009\t0.0\t19.0\t-38.2\t28.9\nLU\t2011\t0.0\t15.4\t-7.2\t33.0\nGK\t2004\t0.0\t26.0\t-1.0\t27.0\nJA\t2010\t0.0\t32.9\t-0.2\t34.0\nCA\t2012\t0.0\t27.3\t-40.2\t36.0\nGK\t2003\t0.0\t23.0\t-2.0\t34.0\nSC\t2011\t0.0\t14.0\t20.0\t32.0\nFI\t2012\t0.0\t17.0\t-34.7\t29.9\nNL\t2006\t0.0\t35.5\t-10.0\t37.0\nPO\t2005\t0.0\t14.4\t-1.7\t38.0\nDA\t2007\t0.0\t21.6\t-15.0\t31.0\nBE\t2014\t0.0\t16.0\t-7.0\t33.1\nAM\t2004\t0.0\t13.0\t-16.0\t39.0\nAM\t2007\t0.0\t13.0\t-24.0\t38.0\nIT\t2012\t0.0\t18.0\t-13.0\t27.0\nLU\t2014\t0.0\t13.4\t-10.0\t32.1\nSF\t2003\t0.0\t7.7\t5.1\t39.6\nIC\t2004\t0.0\t32.0\t-11.7\t27.0\nNO\t2013\t0.0\t39.1\t-35.4\t28.0\nPL\t2007\t0.0\t18.0\t-12.0\t35.0\nSC\t2009\t0.0\t25.2\t20.0\t33.0\nBE\t2011\t0.0\t15.9\t-6.3\t35.0\nDA\t2014\t0.0\t17.0\t-9.0\t30.2\nMY\t2003\t0.0\t11.3\t23.0\t39.0\nGP\t2004\t0.0\t29.8\t22.5\t37.6\nUS\t2008\t0.0\t26.7\t-42.2\t41.9\nMY\t2013\t0.0\t10.3\t22.0\t34.0\nCA\t2003\t0.0\t27.8\t-40.1\t35.8\nSC\t2005\t0.0\t28.3\t19.0\t33.2\nEZ\t2005\t0.0\t19.0\t-15.0\t35.0\nMY\t2005\t0.0\t10.3\t22.0\t36.0\nFI\t2008\t0.0\t26.0\t-23.0\t25.7\nBE\t2010\t0.0\t19.5\t-12.2\t36.0\nJA\t2006\t0.0\t38.6\t-0.1\t34.8\nJA\t2009\t0.0\t26.7\t-0.2\t35.0\nAU\t2014\t0.0\t16.5\t-11.0\t34.0\nCH\t2013\t0.0\t22.0\t13.0\t34.0\nGP\t2003\t0.0\t16.4\t23.2\t32.0\nIC\t2005\t0.0\t30.0\t-7.8\t19.0\nNO\t2010\t0.0\t30.9\t-42.1\t25.6\nSW\t2011\t0.0\t19.0\t-41.6\t29.9\nAU\t2013\t0.0\t17.5\t-12.3\t37.4\nNL\t2014\t0.0\t27.3\t-9.0\t35.0\nUK\t2006\t0.0\t22.6\t-8.4\t35.0\nNO\t2006\t0.0\t31.0\t-33.6\t29.4\nCA\t2014\t0.0\t26.8\t-43.6\t35.9\nIT\t2005\t0.0\t17.0\t-13.0\t28.0\nGP\t2008\t5.7\t5.7\t16.1\t16.1\nFI\t2007\t0.0\t14.4\t-29.0\t26.7\nEZ\t2009\t0.0\t18.5\t-17.0\t33.0\nGK\t2007\t0.0\t22.1\t-0.4\t23.0\nSW\t2008\t0.0\t21.0\t-36.1\t29.9\nFR\t2013\t0.0\t16.5\t-8.0\t38.1\nDA\t2010\t0.0\t14.9\t-17.4\t31.2\nEZ\t2011\t0.0\t17.0\t-15.0\t32.0\nIC\t2014\t0.0\t29.3\t-7.0\t18.0\nCH\t2012\t0.0\t22.0\t14.0\t34.0\nRS\t2010\t0.0\t10.0\t-32.3\t36.0\nAM\t2012\t0.0\t12.0\t-22.0\t39.0\nAU\t2005\t0.0\t11.8\t-18.9\t35.2\nSW\t2007\t0.0\t19.0\t-36.7\t29.9\nDA\t2009\t0.0\t20.6\t-15.0\t32.0\nPO\t2013\t0.0\t20.0\t-1.0\t38.0\nGK\t2010\t0.0\t18.5\t-2.0\t24.2\nAU\t2008\t0.0\t16.0\t-12.0\t34.0\nBE\t2004\t0.0\t25.0\t-10.2\t32.0\nGM\t2007\t0.0\t15.9\t-10.0\t31.0\nFI\t2009\t0.0\t18.0\t-25.7\t26.0\nIT\t2003\t0.0\t25.0\t-9.0\t30.0\nSW\t2013\t0.0\t17.0\t-36.7\t26.3\nMY\t2004\t0.0\t11.8\t22.0\t36.0\nBE\t2006\t0.0\t19.0\t-8.1\t36.1\nAS\t2007\t0.0\t13.4\t1.1\t42.9\nCH\t2004\t0.0\t10.0\t14.0\t33.0\nGP\t2005\t0.0\t29.8\t21.1\t33.4\nMY\t2012\t0.0\t9.3\t23.0\t34.0\nRS\t2004\t0.0\t11.0\t-33.0\t27.0\nSW\t2004\t0.0\t19.0\t-37.6\t28.1\nPL\t2004\t0.0\t16.5\t-21.0\t32.0\nGM\t2006\t0.0\t12.9\t-10.4\t34.0\nRS\t2008\t0.0\t12.0\t-27.6\t31.2\nIT\t2014\t0.0\t20.6\t-6.8\t24.0\nCA\t2009\t0.0\t20.6\t-45.0\t35.0\nDA\t2005\t0.0\t21.6\t-12.3\t29.1\nPO\t2009\t0.0\t17.5\t-1.4\t36.0\nEZ\t2008\t0.0\t20.6\t-10.0\t31.0\nRS\t2011\t0.0\t12.0\t-33.0\t32.0\nDA\t2008\t0.0\t20.6\t-9.4\t30.4\nNL\t2005\t0.0\t38.1\t-16.0\t34.4\nUS\t2014\t0.0\t31.0\t-37.2\t41.2\nIC\t2012\t0.0\t29.0\t-7.0\t19.0\nEZ\t2010\t0.0\t16.5\t-20.1\t34.1\nSF\t2014\t0.0\t13.4\t0.9\t37.4\nNL\t2008\t0.0\t31.4\t-12.0\t32.5\nMY\t2011\t0.0\t10.8\t21.0\t34.0\nFR\t2003\t0.0\t19.0\t-13.9\t39.1\nSW\t2006\t0.0\t17.0\t-37.7\t29.4\nAS\t2006\t0.0\t15.9\t1.1\t44.8\nNL\t2004\t0.0\t28.3\t-10.1\t33.0\nNO\t2008\t0.0\t28.0\t-30.9\t30.4\nEZ\t2013\t0.0\t21.6\t-19.0\t35.0\nUK\t2012\t0.0\t23.1\t-14.0\t30.0\nGK\t2006\t0.0\t18.0\t0.0\t30.0\nNO\t2003\t0.0\t81.0\t-30.5\t30.0\nGM\t2003\t0.0\t16.5\t-15.3\t36.0\nFR\t2011\t0.0\t19.5\t-9.0\t37.8\nBE\t2008\t0.0\t16.5\t-8.0\t31.0\nPO\t2011\t0.0\t15.4\t-1.0\t33.5\nJA\t2008\t0.0\t29.8\t-0.7\t33.7\nSC\t2010\t0.0\t28.8\t21.0\t32.0\nCH\t2011\t0.0\t16.0\t12.0\t34.0\nBE\t2009\t0.0\t16.0\t-15.4\t34.2\nNL\t2010\t0.0\t28.3\t-15.0\t35.0\nDA\t2013\t0.0\t24.2\t-16.7\t33.0\nGM\t2014\t0.0\t13.4\t-9.0\t31.0\nNO\t2009\t0.0\t35.0\t-35.7\t28.4\nPL\t2010\t0.0\t13.4\t-24.0\t35.0\nNO\t2014\t0.0\t35.5\t-35.7\t32.0\nSC\t2004\t0.0\t20.6\t21.0\t33.0\nFR\t2005\t0.0\t15.9\t-12.4\t37.0\nEZ\t2006\t0.0\t18.0\t-17.0\t34.0\nSW\t2012\t0.0\t18.0\t-42.7\t26.3\nCA\t2007\t0.0\t23.7\t-42.0\t36.0\nMY\t2009\t0.0\t8.7\t21.0\t34.0\nJA\t2004\t0.0\t32.4\t-1.0\t34.2\nNO\t2005\t0.0\t32.4\t-34.2\t28.2\nGK\t2011\t0.0\t19.0\t1.0\t28.0\nCA\t2004\t0.0\t32.4\t-44.0\t32.2\nSF\t2007\t0.0\t7.7\t4.2\t38.0\nFR\t2012\t0.0\t15.9\t-16.6\t39.0\nCA\t2005\t0.0\t35.5\t-47.0\t33.2\nJA\t2011\t0.0\t27.3\t-1.4\t34.1\nUS\t2012\t0.0\t22.6\t-49.0\t44.7\nFI\t2005\t0.0\t13.4\t-25.0\t28.0\nUK\t2004\t0.0\t32.0\t-6.1\t31.0\nAS\t2010\t0.0\t13.4\t0.1\t42.2\nAS\t2011\t0.0\t11.3\t-0.8\t45.2\nGP\t2007\t2.6\t6.2\t2.4\t3.7\nGM\t2011\t0.0\t15.4\t-10.0\t30.0\nPO\t2012\t0.0\t13.9\t-2.0\t37.0\nGM\t2009\t0.0\t13.0\t-18.0\t32.0\nCA\t2008\t0.0\t36.5\t-47.0\t35.0\nGP\t2006\t0.0\t18.0\t21.8\t32.2\nBE\t2012\t0.0\t16.0\t-17.0\t35.0\nAM\t2010\t0.0\t14.0\t-11.0\t41.0\nPL\t2003\t0.0\t23.0\t-21.0\t33.5\nIC\t2006\t0.0\t39.0\t-11.0\t18.0\nPO\t2003\t0.0\t20.0\t-2.0\t39.0\nCH\t2005\t0.0\t26.0\t10.0\t33.0\nIT\t2004\t0.0\t18.5\t-7.0\t27.0\nFR\t2004\t0.0\t29.0\t-7.2\t37.0\nCA\t2011\t0.0\t24.7\t-45.0\t34.7\nIC\t2010\t0.0\t24.2\t-10.0\t19.5\nLU\t2006\t0.0\t14.9\t-9.0\t35.3\nAU\t2009\t0.0\t13.9\t-16.8\t33.0\nRS\t2012\t0.0\t12.0\t-37.0\t32.0\nEZ\t2014\t0.0\t16.5\t-15.0\t33.0\nRS\t2003\t0.0\t14.0\t-34.5\t31.0\nAS\t2008\t0.0\t14.9\t1.0\t43.2\nEZ\t2012\t0.0\t19.0\t-22.0\t37.3\nAM\t2009\t0.0\t13.0\t-20.0\t37.0\nPO\t2004\t0.0\t17.0\t0.0\t34.0\nAS\t2009\t0.0\t17.0\t1.8\t44.6\nLU\t2008\t0.0\t14.9\t-7.0\t31.4\nLU\t2009\t0.0\t15.0\t-15.0\t34.0\nIC\t2009\t0.0\t25.7\t-9.0\t19.0\nDA\t2004\t0.0\t16.5\t-14.0\t30.0\nAS\t2003\t0.0\t14.4\t0.3\t45.8\nUS\t2010\t0.0\t26.7\t-39.4\t44.2\nNL\t2007\t0.0\t28.8\t-10.0\t31.0\nNO\t2004\t0.0\t32.0\t-31.0\t28.2\nLU\t2013\t0.0\t12.4\t-11.0\t33.0\nBE\t2005\t0.0\t23.1\t-10.1\t35.0\nIT\t2006\t0.0\t18.0\t-9.0\t27.0\nSF\t2013\t0.0\t8.2\t1.5\t36.1\nAS\t2014\t0.0\t14.4\t0.9\t45.6\nPO\t2008\t0.0\t15.4\t0.6\t32.0\nGK\t2009\t0.0\t18.5\t-3.0\t28.0\nPL\t2009\t0.0\t15.4\t-22.0\t32.1\nSF\t2004\t0.0\t8.7\t5.6\t38.4\nAS\t2013\t0.0\t13.4\t2.8\t47.6\nPL\t2006\t0.0\t25.7\t-29.0\t33.1\nFI\t2013\t0.0\t20.0\t-32.7\t29.9\nUS\t2005\t0.0\t33.4\t-49.0\t43.0\nUK\t2011\t0.0\t26.7\t-5.2\t32.0\nAM\t2006\t0.0\t13.0\t-24.0\t41.0\nAS\t2005\t0.0\t12.9\t2.6\t43.4\nAU\t2006\t0.0\t12.3\t-19.4\t34.0\nSC\t2012\t0.0\t26.2\t21.0\t36.0\nUK\t2008\t0.0\t24.2\t-8.0\t28.4\nIT\t2007\t0.0\t18.5\t-6.0\t26.0\nSF\t2008\t0.0\t11.3\t3.3\t39.8\nFI\t2003\t0.0\t14.4\t-33.0\t29.4\nFI\t2006\t0.0\t12.0\t-31.0\t27.0\nPO\t2006\t0.0\t16.5\t-1.0\t37.0\nGM\t2012\t0.0\t13.9\t-19.0\t34.0\nRS\t2014\t0.0\t11.0\t-28.9\t30.5\nGM\t2010\t0.0\t17.0\t-13.0\t34.0\nFR\t2006\t0.0\t15.9\t-10.0\t36.4\nJA\t2013\t0.0\t38.0\t-0.3\t34.5\nUS\t2003\t0.0\t35.0\t-44.0\t41.0\nIT\t2008\t0.0\t16.4\t-6.2\t23.0\nAU\t2011\t0.0\t15.9\t-15.0\t35.0\nFI\t2011\t0.0\t21.0\t-34.4\t30.7\nFR\t2009\t0.0\t19.0\t-11.1\t40.0\nJA\t2014\t0.0\t19.6\t-0.5\t33.9\nMY\t2007\t0.0\t9.8\t20.0\t35.0\nLU\t2007\t0.0\t17.0\t-8.0\t31.0\nNO\t2012\t0.0\t39.6\t-33.0\t24.8\n"}]},"apps":[],"jobName":"paragraph_1558526245039_1276919228","id":"20160612-180048_998679946","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73086"},{"text":"","user":"anonymous","dateUpdated":"2019-05-22T11:57:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"fontSize":9},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1558526245040_2037234112","id":"20160612-180513_1457527764","dateCreated":"2019-05-22T11:57:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:73087"}],"name":"Weather DataFrame Analysis Solution","id":"2ECWKXS34","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}