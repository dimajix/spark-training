{
  "paragraphs": [
    {
      "text": "%md\n# 0. Add Dependencies\n\nBefore we start working with Spark and Kafka, we need to add the Spark Kafka SQL dependency to Zeppelin:\n```\norg.apache.spark:spark-sql-kafka-0-10_2.12:3.0.1 exclude: net.jpountz.lz4:lz4\nmysql:mysql-connector-java:6.0.6\n```\n\nYou will also need to add a new repository, since Maven does not deliver artifacts via unencrypted http any more:\n```\nhttps://repo1.maven.org/maven2\n```",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:46:15+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/text",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>0. Add Dependencies</h1>\n<p>Before we start working with Spark and Kafka, we need to add the Spark Kafka SQL dependency to Zeppelin:</p>\n<pre><code>org.apache.spark:spark-sql-kafka-0-10_2.12:3.0.1 exclude: net.jpountz.lz4:lz4\nmysql:mysql-connector-java:6.0.6\n</code></pre>\n<p>You will also need to add a new repository, since Maven does not deliver artifacts via unencrypted http any more:</p>\n<pre><code>https://repo1.maven.org/maven2\n</code></pre>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422002_-2117685222",
      "id": "20180605-065056_2074008018",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "dateStarted": "2021-09-18T06:46:10+0000",
      "dateFinished": "2021-09-18T06:46:10+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:6983"
    },
    {
      "text": "%md\n# 1. Connect to data source\n\nFirst you need to fill a Kafka topic, for example via\n\n    s3cat.py -I1 -B10 s3://dimajix-training/data/twitter-sample/ | /opt/kafka/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic twitter\n\nThen we connect to the raw data socket as the datasource by using the `DataStreamReader` API via `spark.readStream`. We need to specify the options `kafka.bootstrap.servers` and `subscribe` and we need to use the format `kafka` for connecting to the data source. The Kafka topic will stream Twitter data samples in raw JSON format, i.e. one JSON document per line.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>1. Connect to data source</h1>\n<p>First you need to fill a Kafka topic, for example via</p>\n<pre><code>s3cat.py -I1 -B10 s3://dimajix-training/data/twitter-sample/ | /opt/kafka/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic twitter\n</code></pre>\n<p>Then we connect to the raw data socket as the datasource by using the <code>DataStreamReader</code> API via <code>spark.readStream</code>. We need to specify the options <code>kafka.bootstrap.servers</code> and <code>subscribe</code> and we need to use the format <code>kafka</code> for connecting to the data source. The Kafka topic will stream Twitter data samples in raw JSON format, i.e. one JSON document per line.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422003_-1515686961",
      "id": "20170218-160028_195174762",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6986"
    },
    {
      "text": "// Fill in the correct AWS VPC address of your master host\nval master = \"kku.training.dimajix-aws.net:9092\"\n\n// Connect to Kafka using the DataStreamReader API via spark.readStream. You need to specify the options `kafka.bootstrap.servers`, `subscribe` and you need to use the format `kafka`\nval lines = spark.readStream\n  .format(\"kafka\")\n  .option(\"kafka.bootstrap.servers\", master)\n  .option(\"subscribe\", \"twitter\")\n  .option(\"startingOffsets\", \"latest\")\n  .load()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:52:34+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mmaster\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = kku.training.dimajix-aws.net:9092\n\u001b[1m\u001b[34mlines\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [key: binary, value: binary ... 5 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422004_-1353420186",
      "id": "20170218-160002_129671727",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "FINISHED",
      "$$hashKey": "object:6987",
      "dateFinished": "2021-09-18T06:52:35+0000",
      "dateStarted": "2021-09-18T06:52:34+0000"
    },
    {
      "text": "%md\n## 1.1 Inspect Schema\n\nThe result of the load method is a `DataFrame` again, but a streaming one. This `DataFrame` again has a schema, which we can inspect with the usual method:",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {},
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>1.1 Inspect Schema</h2>\n<p>The result of the load method is a <code>DataFrame</code> again, but a streaming one. This <code>DataFrame</code> again has a schema, which we can inspect with the usual method:</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422004_1771636212",
      "id": "20170218-161504_128762750",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6988"
    },
    {
      "text": "lines.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- key: binary (nullable = true)\n |-- value: binary (nullable = true)\n |-- topic: string (nullable = true)\n |-- partition: integer (nullable = true)\n |-- offset: long (nullable = true)\n |-- timestamp: timestamp (nullable = true)\n |-- timestampType: integer (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422004_1257065281",
      "id": "20170218-160206_920542952",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6989"
    },
    {
      "text": "%md\n# 2. Inspect Data\n\nOf course we also want to inspect the data inside the DataFrame. But this time, we cannot simply invoke `show`, because normal actions do not (directly) work on streaming DataFrames. Instead we need to create a continiuous query. Later, we will see a neat trick how a streaming query can be transformed into a volatile table.\n\nIn order to create a continuous query, we need to perform the following steps\n\n1. Create a `DataStreamWriter` by using the `writeStream` method of a DataFrame\n2. Specify the output format. We use `console` in our case\n3. Specify a checkpoint location on HDFS. This is required for restarting\n4. Optionally specify a processing period\n5. Start the query\n6. For Zeppelin only: Sleep a little bit, or we miss the output",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>2. Inspect Data</h1>\n<p>Of course we also want to inspect the data inside the DataFrame. But this time, we cannot simply invoke <code>show</code>, because normal actions do not (directly) work on streaming DataFrames. Instead we need to create a continiuous query. Later, we will see a neat trick how a streaming query can be transformed into a volatile table.</p>\n<p>In order to create a continuous query, we need to perform the following steps</p>\n<ol>\n<li>Create a <code>DataStreamWriter</code> by using the <code>writeStream</code> method of a DataFrame</li>\n<li>Specify the output format. We use <code>console</code> in our case</li>\n<li>Specify a checkpoint location on HDFS. This is required for restarting</li>\n<li>Optionally specify a processing period</li>\n<li>Start the query</li>\n<li>For Zeppelin only: Sleep a little bit, or we miss the output</li>\n</ol>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422004_226598641",
      "id": "20170218-161603_528321172",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6990"
    },
    {
      "text": "import org.apache.spark.sql.streaming.ProcessingTime\n\nval query = lines\n    .withColumn(\"value\", $\"value\".cast(\"string\"))\n    .writeStream\n    .format(\"console\")\n    .outputMode(\"append\")\n    .option(\"checkpointLocation\", \"/tmp/zeppelin/checkpoint-twitter-print-\" + System.currentTimeMillis())\n    .start()\n    \nThread.sleep(30000)    ",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "-------------------------------------------\nBatch: 0\n-------------------------------------------\n+---+-----+-----+---------+------+---------+-------------+\n|key|value|topic|partition|offset|timestamp|timestampType|\n+---+-----+-----+---------+------+---------+-------------+\n+---+-----+-----+---------+------+---------+-------------+\n\n-------------------------------------------\nBatch: 1\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        9|    25|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       11|    25|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       11|    26|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       11|    27|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       11|    28|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    46|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    47|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    48|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    13|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        8|    53|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        8|    54|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    19|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    20|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    21|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    22|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    23|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    34|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    36|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    20|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 2\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        1|    25|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        1|    26|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        1|    27|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        1|    28|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        1|    29|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        1|    30|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    26|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    27|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    28|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    29|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    30|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    31|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    27|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    28|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    29|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    30|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    31|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    32|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    33|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    28|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 3\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        1|    31|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        1|    32|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    32|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    33|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        7|    46|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    18|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    19|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        8|    57|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        8|    58|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        8|    59|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 4\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        7|    47|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        7|    48|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       12|    24|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       12|    25|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       12|    26|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       12|    27|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       12|    28|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       12|    29|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       12|    30|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       12|    31|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       12|    32|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       12|    33|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       12|    34|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 5\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        0|    20|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    21|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    22|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    26|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    27|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    28|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 6\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        1|    33|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        1|    34|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    34|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    36|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        4|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    49|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    23|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    24|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    25|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    26|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    27|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    28|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    29|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    25|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    26|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 7\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|       11|    33|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       11|    34|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    30|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    32|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    33|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    34|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    36|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 8\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|       14|    34|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    36|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    37|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    38|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    39|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        2|    40|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        2|    41|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        2|    42|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    43|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 9\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        9|    34|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        9|    36|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 10\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|       14|    37|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    38|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    39|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    40|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    41|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    42|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    44|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    45|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    46|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    47|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    46|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    47|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 11\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        5|    48|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    49|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    50|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    51|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        5|    52|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    53|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    54|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    48|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    49|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        6|    50|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 12\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        1|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    37|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       15|    38|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    39|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    50|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    51|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    52|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        3|    53|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    54|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    55|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 13\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        3|    55|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    56|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    57|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    27|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    28|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    29|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    30|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    31|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       10|    32|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 14\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|       14|    43|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       14|    44|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        4|    36|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        4|    37|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        4|    38|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        4|    39|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    31|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    32|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        8|    60|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        8|    61|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    29|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    30|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    31|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 15\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|       11|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       11|    36|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       11|    37|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       11|    38|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    33|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    34|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        0|    35|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        0|    36|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 16\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        3|    58|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        3|    59|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        3|    60|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        3|    61|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        3|    62|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        3|    63|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    64|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    32|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    33|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       13|    34|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 17\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"delete\":{\"statu...|twitter|        5|    56|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        5|    57|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        5|    58|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    59|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    60|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    61|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    62|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    48|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    49|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    50|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       10|    33|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       10|    34|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       10|    35|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|       10|    36|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    37|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 18\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        4|    40|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        4|    41|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        7|    49|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    35|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    36|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       13|    37|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    51|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    52|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    53|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    51|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    52|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 19\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        4|    42|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        4|    43|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        4|    44|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    54|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        2|    55|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    38|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    39|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       10|    40|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n-------------------------------------------\nBatch: 20\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|        3|    65|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        3|    66|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    37|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        0|    38|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    39|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    40|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    41|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    42|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    43|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        0|    44|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        0|    45|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        5|    63|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    53|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    54|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    55|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        6|    56|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\nimport org.apache.spark.sql.streaming.ProcessingTime\nquery: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@3fcabe0f\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422005_-1163883023",
      "id": "20170218-160132_1015574950",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6991"
    },
    {
      "text": "%md\n## 2.1 Stop Query\n\nIn contrast to the RDD API, we can simply stop an individual query instead of a whole StreamingContext by simply calling the `stop` method on the query object. This makes working with streams much easier.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {},
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>2.1 Stop Query</h2>\n<p>In contrast to the RDD API, we can simply stop an individual query instead of a whole StreamingContext by simply calling the <code>stop</code> method on the query object. This makes working with streams much easier.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422007_-1033285220",
      "id": "20170218-161746_736484246",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6992"
    },
    {
      "text": "query.stop",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "-------------------------------------------\nBatch: 21\n-------------------------------------------\n+----+--------------------+-------+---------+------+--------------------+-------------+\n| key|               value|  topic|partition|offset|           timestamp|timestampType|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n|null|{\"created_at\":\"Fr...|twitter|       15|    40|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|       15|    41|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    46|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    47|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    48|2020-05-13 13:00:...|            0|\n|null|{\"created_at\":\"Fr...|twitter|        0|    49|2020-05-13 13:00:...|            0|\n|null|{\"delete\":{\"statu...|twitter|        0|    50|2020-05-13 13:00:...|            0|\n+----+--------------------+-------+---------+------+--------------------+-------------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422007_1160197",
      "id": "20170218-160155_661067655",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6993"
    },
    {
      "text": "query.exception",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res5: Option[org.apache.spark.sql.streaming.StreamingQueryException] = None\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422007_-1292794599",
      "id": "20181122-084005_2133988311",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6994"
    },
    {
      "text": "%md\n# 3. Counting Hash-Tags\n\nSo we now want to create a streaming hashtag count. First we need to extract the Tweet itself from the JSON document, then we need to extract the hashtags in a similar way to the batch word traditional DataFrame word count example, i.e. we split every line into words, keep only hash-tags, group the words and count the sizes of the groups.\n\nEach query looks as follows\n\n```\n{ \"contributors\" : null,\n  \"coordinates\" : null,\n  \"created_at\" : \"Fri Jul 29 12:46:00 +0000 2016\",\n  \"entities\" : { \"hashtags\" : [  ],\n      \"symbols\" : [  ],\n      \"urls\" : [ { \"display_url\" : \"fb.me/ItnwZEhy\",\n            \"expanded_url\" : \"http://fb.me/ItnwZEhy\",\n            \"indices\" : [ 33,\n                56\n              ],\n            \"url\" : \"https://t.co/mM0if95F1K\"\n          } ],\n      \"user_mentions\" : [  ]\n    },\n  \"favorite_count\" : 0,\n  \"favorited\" : false,\n  \"filter_level\" : \"low\",\n  \"geo\" : null,\n  \"id\" : 759007065155117058,\n  \"id_str\" : \"759007065155117058\",\n  \"in_reply_to_screen_name\" : null,\n  \"in_reply_to_status_id\" : null,\n  \"in_reply_to_status_id_str\" : null,\n  \"in_reply_to_user_id\" : null,\n  \"in_reply_to_user_id_str\" : null,\n  \"is_quote_status\" : false,\n  \"lang\" : \"en\",\n  \"place\" : null,\n  \"possibly_sensitive\" : false,\n  \"retweet_count\" : 0,\n  \"retweeted\" : false,\n  \"source\" : \"<a href=\\\"http://www.facebook.com/twitter\\\" rel=\\\"nofollow\\\">Facebook</a>\",\n  \"text\" : \"I posted a new video to Facebook https://t.co/mM0if95F1K\",\n  \"timestamp_ms\" : \"1469796360659\",\n  \"truncated\" : false,\n  \"user\" : { \"contributors_enabled\" : false,\n      \"created_at\" : \"Sat Sep 08 08:28:55 +0000 2012\",\n      \"default_profile\" : false,\n      \"default_profile_image\" : false,\n      \"description\" : null,\n      \"favourites_count\" : 0,\n      \"follow_request_sent\" : null,\n      \"followers_count\" : 0,\n      \"following\" : null,\n      \"friends_count\" : 0,\n      \"geo_enabled\" : false,\n      \"id\" : 810489374,\n      \"id_str\" : \"810489374\",\n      \"is_translator\" : false,\n      \"lang\" : \"zh-tw\",\n      \"listed_count\" : 0,\n      \"location\" : null,\n      \"name\" : \"張冥閻\",\n      \"notifications\" : null,\n      \"profile_background_color\" : \"FFF04D\",\n      \"profile_background_image_url\" : \"http://abs.twimg.com/images/themes/theme19/bg.gif\",\n      \"profile_background_image_url_https\" : \"https://abs.twimg.com/images/themes/theme19/bg.gif\",\n      \"profile_background_tile\" : false,\n      \"profile_image_url\" : \"http://pbs.twimg.com/profile_images/378800000157469481/0a267258c8ccd1bf53d01c115677dbd7_normal.jpeg\",\n      \"profile_image_url_https\" : \"https://pbs.twimg.com/profile_images/378800000157469481/0a267258c8ccd1bf53d01c115677dbd7_normal.jpeg\",\n      \"profile_link_color\" : \"0099CC\",\n      \"profile_sidebar_border_color\" : \"FFF8AD\",\n      \"profile_sidebar_fill_color\" : \"F6FFD1\",\n      \"profile_text_color\" : \"333333\",\n      \"profile_use_background_image\" : true,\n      \"protected\" : false,\n      \"screen_name\" : \"nineemperor1\",\n      \"statuses_count\" : 9652,\n      \"time_zone\" : null,\n      \"url\" : null,\n      \"utc_offset\" : null,\n      \"verified\" : false\n    }\n}\n```\n\nIn order to extract a field from a JSON document, we can use the `get_json_object` function.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {},
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>3. Counting Hash-Tags</h1>\n<p>So we now want to create a streaming hashtag count. First we need to extract the Tweet itself from the JSON document, then we need to extract the hashtags in a similar way to the batch word traditional DataFrame word count example, i.e. we split every line into words, keep only hash-tags, group the words and count the sizes of the groups.</p>\n<p>Each query looks as follows</p>\n<pre><code>{ \"contributors\" : null,\n  \"coordinates\" : null,\n  \"created_at\" : \"Fri Jul 29 12:46:00 +0000 2016\",\n  \"entities\" : { \"hashtags\" : [  ],\n      \"symbols\" : [  ],\n      \"urls\" : [ { \"display_url\" : \"fb.me/ItnwZEhy\",\n            \"expanded_url\" : \"http://fb.me/ItnwZEhy\",\n            \"indices\" : [ 33,\n                56\n              ],\n            \"url\" : \"https://t.co/mM0if95F1K\"\n          } ],\n      \"user_mentions\" : [  ]\n    },\n  \"favorite_count\" : 0,\n  \"favorited\" : false,\n  \"filter_level\" : \"low\",\n  \"geo\" : null,\n  \"id\" : 759007065155117058,\n  \"id_str\" : \"759007065155117058\",\n  \"in_reply_to_screen_name\" : null,\n  \"in_reply_to_status_id\" : null,\n  \"in_reply_to_status_id_str\" : null,\n  \"in_reply_to_user_id\" : null,\n  \"in_reply_to_user_id_str\" : null,\n  \"is_quote_status\" : false,\n  \"lang\" : \"en\",\n  \"place\" : null,\n  \"possibly_sensitive\" : false,\n  \"retweet_count\" : 0,\n  \"retweeted\" : false,\n  \"source\" : \"&lt;a href=\\\"http://www.facebook.com/twitter\\\" rel=\\\"nofollow\\\"&gt;Facebook&lt;/a&gt;\",\n  \"text\" : \"I posted a new video to Facebook https://t.co/mM0if95F1K\",\n  \"timestamp_ms\" : \"1469796360659\",\n  \"truncated\" : false,\n  \"user\" : { \"contributors_enabled\" : false,\n      \"created_at\" : \"Sat Sep 08 08:28:55 +0000 2012\",\n      \"default_profile\" : false,\n      \"default_profile_image\" : false,\n      \"description\" : null,\n      \"favourites_count\" : 0,\n      \"follow_request_sent\" : null,\n      \"followers_count\" : 0,\n      \"following\" : null,\n      \"friends_count\" : 0,\n      \"geo_enabled\" : false,\n      \"id\" : 810489374,\n      \"id_str\" : \"810489374\",\n      \"is_translator\" : false,\n      \"lang\" : \"zh-tw\",\n      \"listed_count\" : 0,\n      \"location\" : null,\n      \"name\" : \"張冥閻\",\n      \"notifications\" : null,\n      \"profile_background_color\" : \"FFF04D\",\n      \"profile_background_image_url\" : \"http://abs.twimg.com/images/themes/theme19/bg.gif\",\n      \"profile_background_image_url_https\" : \"https://abs.twimg.com/images/themes/theme19/bg.gif\",\n      \"profile_background_tile\" : false,\n      \"profile_image_url\" : \"http://pbs.twimg.com/profile_images/378800000157469481/0a267258c8ccd1bf53d01c115677dbd7_normal.jpeg\",\n      \"profile_image_url_https\" : \"https://pbs.twimg.com/profile_images/378800000157469481/0a267258c8ccd1bf53d01c115677dbd7_normal.jpeg\",\n      \"profile_link_color\" : \"0099CC\",\n      \"profile_sidebar_border_color\" : \"FFF8AD\",\n      \"profile_sidebar_fill_color\" : \"F6FFD1\",\n      \"profile_text_color\" : \"333333\",\n      \"profile_use_background_image\" : true,\n      \"protected\" : false,\n      \"screen_name\" : \"nineemperor1\",\n      \"statuses_count\" : 9652,\n      \"time_zone\" : null,\n      \"url\" : null,\n      \"utc_offset\" : null,\n      \"verified\" : false\n    }\n}\n</code></pre>\n<p>In order to extract a field from a JSON document, we can use the <code>get_json_object</code> function.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422007_-386932698",
      "id": "20170218-161837_1521722724",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6995"
    },
    {
      "text": "%md\n## 3.1 Extract Tweet\n\nFirst we need to extract the tweet text itself via the `get_json_object` function and store it into a new column.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {},
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>3.1 Extract Tweet</h2>\n<p>First we need to extract the tweet text itself via the <code>get_json_object</code> function and store it into a new column.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422008_-1521156795",
      "id": "20170220-182415_1872492795",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6996"
    },
    {
      "text": "import org.apache.spark.sql.types._\n\nval ts_text = lines.select(\n        $\"timestamp\",\n        get_json_object($\"value\".cast(\"string\"), \"$.text\").as(\"text\")\n    )",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.types._\nts_text: org.apache.spark.sql.DataFrame = [timestamp: timestamp, text: string]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422008_-440541657",
      "id": "20170218-160238_1475524112",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6997"
    },
    {
      "text": "ts_text.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- timestamp: timestamp (nullable = true)\n |-- text: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422008_629657144",
      "id": "20181122-084441_64874597",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6998"
    },
    {
      "text": "%md\n## 3.2 Extract Topics\n\nNow that we have the Tweet text itself, we extract all topics with the following approach:\n1. Split text along spaces using `split`\n2. Create multiple records from all words using `explode`\n3. Filter all hash-tags (words that start with a `#`)\n4. Filter out all empty topics (topic name only consists of hash-tag `#` itself)",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>3.2 Extract Topics</h2>\n<p>Now that we have the Tweet text itself, we extract all topics with the following approach:<br/>1. Split text along spaces using <code>split</code><br/>2. Create multiple records from all words using <code>explode</code><br/>3. Filter all hash-tags (words that start with a <code>#</code>)<br/>4. Filter out all empty topics (topic name only consists of hash-tag <code>#</code> itself)</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422009_1135246846",
      "id": "20170220-182404_1394954195",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:6999"
    },
    {
      "text": "val topics = ts_text.select(\n        ts_text(\"timestamp\"), \n        explode(split(ts_text(\"text\"),\" \")).as(\"topic\")\n    )\n    .filter($\"topic\".startsWith(\"#\"))\n    .filter($\"topic\" =!= \"#\")",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "topics: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [timestamp: timestamp, topic: string]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422009_34405952",
      "id": "20170220-180159_930749179",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7000"
    },
    {
      "text": "%md\n## 3.3 Count Topics\n\nNow that we have the hash tags (topics), we perform a simple aggregation as usual: Group by hashtag (`topic`) and count number of tweets (using `count` or `sum(1)`)",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>3.3 Count Topics</h2>\n<p>Now that we have the hash tags (topics), we perform a simple aggregation as usual: Group by hashtag (<code>topic</code>) and count number of tweets (using <code>count</code> or <code>sum(1)</code>)</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422009_2140663097",
      "id": "20170220-182554_1623876741",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7001"
    },
    {
      "text": "val counts = topics\n    .groupBy(\"topic\")\n    .agg(sum(lit(1)).as(\"count\"))",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "counts: org.apache.spark.sql.DataFrame = [topic: string, count: bigint]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422010_1564674403",
      "id": "20170218-160526_2008806660",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7002"
    },
    {
      "text": "counts.printSchema",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- topic: string (nullable = true)\n |-- count: long (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422010_1181900928",
      "id": "20170218-162308_1835168589",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7003"
    },
    {
      "text": "%md\n## 3.4 Print Results onto Console\n\nAgain we want to print the results onto the console.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>3.4 Print Results onto Console</h2>\n<p>Again we want to print the results onto the console.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422010_-578491028",
      "id": "20170218-161041_735302634",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7004"
    },
    {
      "text": "val query = counts.writeStream\n    .format(\"console\")\n    .outputMode(\"update\")\n    .option(\"checkpointLocation\", \"/tmp/zeppelin/checkpoint-twitter-count-\" + System.currentTimeMillis())\n    .start()\n    \nThread.sleep(60000)\n\nquery.stop()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "-------------------------------------------\nBatch: 0\n-------------------------------------------\n+-------------------+-----+\n|              topic|count|\n+-------------------+-----+\n|#DolceAmoreSabotage|    1|\n|#PushAwardsLizQuens|    1|\n|     #بوب_كورن\nاللي|    1|\n+-------------------+-----+\n\n-------------------------------------------\nBatch: 1\n-------------------------------------------\n+-------------------+-----+\n|              topic|count|\n+-------------------+-----+\n|               #gay|    1|\n|   #ParadiseIsland2|    1|\n|              #Cine|    1|\n|        #แคปชั่นกวน|    1|\n|      #แคปชั่นคนโสด|    1|\n|             #Quran|    1|\n|           #voltron|    1|\n|   #WilliamODouglas|    1|\n|      #surfportugal|    1|\n|     #تلوث_الليطاني|    1|\n|              #슈가|    1|\n|               #BTS|    1|\n|         #เสียงสู๊ง|    1|\n|#AnotherFollowTrain|    1|\n|         #AngelsInc|    1|\n|               #RDC|    1|\n|               #F4F|    1|\n|        #MTVHottest|    2|\n|            #outnow|    1|\n|            #Orient|    1|\n+-------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 2\n-------------------------------------------\n+--------------------+-----+\n|               topic|count|\n+--------------------+-----+\n|    #BhaagKejriBhaag|    1|\n|         #nowplaying|    1|\n|              #david|    1|\n|           #松野莉奈|    1|\n|      #northeasthour|    1|\n|            #Boudoir|    1|\n|              #Quran|    2|\n|         #奇妙な冒険|    1|\n|               #wine|    1|\n|              #SEHUN|    1|\n|               #gina|    1|\n|     #私立恵比寿中学|    1|\n|               #tits|    1|\n|               #milf|    1|\n|             #preggo|    1|\n|               #名言|    1|\n|#WorldDayAgainstT...|    1|\n|           #ガルアワ|    1|\n|               #lynn|    1|\n|           #中山莉子|    1|\n+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 3\n-------------------------------------------\n+-------------------------------+-----+\n|                          topic|count|\n+-------------------------------+-----+\n|                     #ImWithHer|    1|\n|                #魁ミュージック|    1|\n|           #DolceAmoreSabota...|    2|\n|                    #Periscope:|    1|\n|                  #SOMMERFERIEN|    1|\n|                       #DNC2016|    1|\n|   #乃木坂46\n\n15th新センター...|    1|\n|                  #infoloker...|    1|\n|                   #BankDanamon|    1|\n|          #生田絵梨花\n#生駒里奈|    1|\n|              #StrongerTogether|    1|\n|#高山一実\n\n#乃木坂46好きな人...|    1|\n|                   #RGinLucknow|    1|\n|                      #秋元真夏|    1|\n|                          #work|    1|\n+-------------------------------+-----+\n\n-------------------------------------------\nBatch: 4\n-------------------------------------------\n+-------------------+-----+\n|              topic|count|\n+-------------------+-----+\n|  #เมเจอร์ปิ่นเกล้า|    1|\n|             #Manus|    1|\n| #Hankook_Chinaware|    1|\n|            #Hadith|    1|\n|             #Корея|    1|\n|               #por|    1|\n|   #костяной_фарфор|    1|\n|     #fridayfeeling|    1|\n|             #Nauru|    1|\n|#DolceAmoreSabotage|   15|\n|          #PPTVHD36|    1|\n|             #beach|    1|\n|     #PIN:28DAB92E.|    1|\n|              #NHCP|    1|\n|  #BandungIndonesia|    1|\n|                 #ﷺ|    1|\n|#PushAwardsLizQuens|   15|\n|             #glass|    1|\n|   #SMS:08986970787|    1|\n+-------------------+-----+\n\n-------------------------------------------\nBatch: 5\n-------------------------------------------\n+--------------------------+-----+\n|                     topic|count|\n+--------------------------+-----+\n|                  #GMG2016|    1|\n|                   #섹티즌|    1|\n|                  #야보기…|    1|\n|            #HayatımınAşkı|    1|\n|           #온에어코리아TV|    1|\n|                   #Sierra|    1|\n|               #brightaide|    1|\n|             #성인무료야동|    1|\n|                     #صورة|    1|\n|                  #msiriri|    1|\n|                   #FateGO|    1|\n|                 #섹스카페|    1|\n|          #demircerrahoğlu|    1|\n|                #Auschwitz|    1|\n|                #BIGOLIVE.|    1|\n|#온에어코리아TV\n\nhttps:...|    1|\n|                #تويت_حديث|    1|\n|                 #국산유출|    1|\n|                    #煎pan|    1|\n|                      #ICT|    1|\n+--------------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 6\n-------------------------------------------\n+--------------------+-----+\n|               topic|count|\n+--------------------+-----+\n|      #enlightenment|    1|\n|              #Alcoy|    1|\n|       #ソフトテニス|    1|\n|             #コーデ|    1|\n|         #bestofetsy|    2|\n|       #優しい雰囲気|    1|\n|            #momoclo|    1|\n|              #SEHUN|    2|\n|#AgendaSettingTheory|    1|\n|#NotYourNativeSte...|    1|\n|   #OneOfTheNiceOnes|    1|\n|           #ベージュ|    1|\n|           #夏コーデ|    1|\n|           #シンプル|    1|\n|         #大人コーデ|    1|\n|               #사나|    1|\n|#EtsyHandmade\n#et...|    2|\n|              #Alcoi|    1|\n|               #Sola|    1|\n|          #Manosque,|    1|\n+--------------------+-----+\nonly showing top 20 rows\n\nquery: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@76dea5b\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422010_1149349415",
      "id": "20170218-160613_988660270",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7005"
    },
    {
      "text": "%md\n# 4. Time-Windowed Aggregation\n\nAnother interesting (and probably more realistic) application is to perform time windowed aggregations. This means that we define a sliding time window used in the `groupBy` clause. In addition we also define a so called *watermark* which tells Spark how long to wait for late arrivels of individual data points (we don't have them in our simple example).",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>4. Time-Windowed Aggregation</h1>\n<p>Another interesting (and probably more realistic) application is to perform time windowed aggregations. This means that we define a sliding time window used in the <code>groupBy</code> clause. In addition we also define a so called <em>watermark</em> which tells Spark how long to wait for late arrivels of individual data points (we don't have them in our simple example).</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422011_426992783",
      "id": "20170218-164639_1471935006",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7006"
    },
    {
      "text": "val windowedCounts = (topics\n    .withWatermark(\"timestamp\", \"10 seconds\")\n    .groupBy(window($\"timestamp\", \"5 seconds\", \"1 seconds\"), $\"topic\")\n    .agg(sum(lit(1)).as(\"count\"))\n    )",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "windowedCounts: org.apache.spark.sql.DataFrame = [window: struct<start: timestamp, end: timestamp>, topic: string ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422011_-452670357",
      "id": "20170218-164703_2039341008",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7007"
    },
    {
      "text": "windowedCounts.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- window: struct (nullable = true)\n |    |-- start: timestamp (nullable = true)\n |    |-- end: timestamp (nullable = true)\n |-- topic: string (nullable = true)\n |-- count: long (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422011_1700892745",
      "id": "20170218-165357_1483843188",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7008"
    },
    {
      "text": "%md\n## 4.1 Output Data\n\nLet's again output the data. This time, we also like to investigate the different output modes `append`, `complete` and `update`.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>4.1 Output Data</h2>\n<p>Let's again output the data. This time, we also like to investigate the different output modes <code>append</code>, <code>complete</code> and <code>update</code>.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422012_794113122",
      "id": "20180405-191004_1783341391",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7009"
    },
    {
      "text": "val query = windowedCounts.writeStream\n    .outputMode(\"update\")\n    .format(\"console\")\n    .trigger(ProcessingTime(\"1 seconds\"))\n    .queryName(\"topic_counts\")\n    .option(\"checkpointLocation\", \"/tmp/zeppelin/checkpoint-twitter-console-\" + System.currentTimeMillis())\n    .start()   \n    \nThread.sleep(120000)\n\nquery.stop()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n-------------------------------------------\nBatch: 0\n-------------------------------------------\n+------+-----+-----+\n|window|topic|count|\n+------+-----+-----+\n+------+-----+-----+\n\n-------------------------------------------\nBatch: 1\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:04...|               #vsco|    1|\n|[2020-05-13 13:04...|             #selfie|    1|\n|[2020-05-13 13:04...|      #نصيحة_عالماشي|    1|\n|[2020-05-13 13:04...|#MyNameIsYlonaGarcia|    1|\n|[2020-05-13 13:04...|           #infantil|    1|\n|[2020-05-13 13:04...|            #digital|    1|\n|[2020-05-13 13:03...|           #Mark9:23|    1|\n|[2020-05-13 13:03...|       #Ghostbusters|    1|\n|[2020-05-13 13:04...|          #asiangirl|    1|\n|[2020-05-13 13:04...|          #godislife|    1|\n|[2020-05-13 13:03...| #bali\n.\n.\n.\n#Repost|    1|\n|[2020-05-13 13:03...|       #MinimaxMagic|    1|\n|[2020-05-13 13:03...|            #vscocam|    1|\n|[2020-05-13 13:03...|      #نصيحة_عالماشي|    1|\n|[2020-05-13 13:03...|           #infantil|    1|\n|[2020-05-13 13:04...|         #يوم_الجمعه|    1|\n|[2020-05-13 13:03...|           #rufollow|    1|\n|[2020-05-13 13:03...|               #MUFC|    1|\n|[2020-05-13 13:04...|        #YlonaGarcia|    1|\n|[2020-05-13 13:04...|        #likeforlike|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 2\n-------------------------------------------\n+--------------------+----------------------+-----+\n|              window|                 topic|count|\n+--------------------+----------------------+-----+\n|[2020-05-13 13:04...|  #DolceAmoreSabota...|    2|\n|[2020-05-13 13:04...|       #Fitstats_en_US|    1|\n|[2020-05-13 13:04...|         #มติชนบันเทิง|    1|\n|[2020-05-13 13:04...|#백현\nhttps://t.co/...|    1|\n|[2020-05-13 13:04...|  #DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|  #DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|#백현\nhttps://t.co/...|    1|\n|[2020-05-13 13:04...|       #Fitstats_en_US|    1|\n|[2020-05-13 13:04...|#백현\nhttps://t.co/...|    1|\n|[2020-05-13 13:04...|  #DolceAmoreSabota...|    2|\n|[2020-05-13 13:04...|         #มติชนบันเทิง|    1|\n|[2020-05-13 13:04...|#백현\nhttps://t.co/...|    1|\n|[2020-05-13 13:04...|  #DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|#백현\nhttps://t.co/...|    1|\n|[2020-05-13 13:04...|         #มติชนบันเทิง|    1|\n|[2020-05-13 13:04...|  #DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|         #มติชนบันเทิง|    1|\n|[2020-05-13 13:04...|         #มติชนบันเทิง|    1|\n|[2020-05-13 13:04...|       #Fitstats_en_US|    1|\n|[2020-05-13 13:04...|       #Fitstats_en_US|    1|\n+--------------------+----------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 3\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|            #healthy|    1|\n|[2020-05-13 13:04...|         #MabuhayBTS|    1|\n|[2020-05-13 13:04...|#enlightenmentmov...|    1|\n|[2020-05-13 13:04...|#enlightenmentmov...|    1|\n|[2020-05-13 13:04...|        #BTSinMANILA|    1|\n|[2020-05-13 13:04...|         #MabuhayBTS|    1|\n|[2020-05-13 13:04...|#enlightenmentmov...|    1|\n|[2020-05-13 13:04...|        #BTSinMANILA|    1|\n|[2020-05-13 13:04...|            #healthy|    1|\n|[2020-05-13 13:04...|            #healthy|    1|\n|[2020-05-13 13:04...|        #BTSinMANILA|    1|\n|[2020-05-13 13:04...|         #MabuhayBTS|    1|\n|[2020-05-13 13:04...|        #BTSinMANILA|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|         #MabuhayBTS|    1|\n|[2020-05-13 13:04...|            #healthy|    1|\n|[2020-05-13 13:04...|        #BTSinMANILA|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 4\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    2|\n|[2020-05-13 13:04...|               #free|    1|\n|[2020-05-13 13:04...|               #AWTU|    1|\n|[2020-05-13 13:04...|           #خبر_عاجل|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    2|\n|[2020-05-13 13:04...|              #Quran|    1|\n|[2020-05-13 13:04...|              #AOMG…|    1|\n|[2020-05-13 13:04...|              #AOMG…|    1|\n|[2020-05-13 13:04...|               #free|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|               #AWTU|    1|\n|[2020-05-13 13:04...|               #free|    1|\n|[2020-05-13 13:04...|         #NowPlaying|    1|\n|[2020-05-13 13:04...|         #NowPlaying|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|               #AWTU|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    2|\n|[2020-05-13 13:04...|              #AOMG…|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|           #خبر_عاجل|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 5\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:04...|                  #W|    1|\n|[2020-05-13 13:04...|    #CEOSleepout2016|    1|\n|[2020-05-13 13:04...|               #slag|    1|\n|[2020-05-13 13:04...|                  #W|    1|\n|[2020-05-13 13:04...| #DolceAmoreSabotage|    6|\n|[2020-05-13 13:04...|          #SmashBros|    1|\n|[2020-05-13 13:04...|             #rakday|    1|\n|[2020-05-13 13:04...|             #rakday|    1|\n|[2020-05-13 13:04...|               #slag|    1|\n|[2020-05-13 13:04...|               #WiiU|    1|\n|[2020-05-13 13:04...| #DolceAmoreSabotage|    6|\n|[2020-05-13 13:04...|       #Baseball.FAQ|    1|\n|[2020-05-13 13:04...|                  #W|    1|\n|[2020-05-13 13:04...|          #sexygirls|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    2|\n|[2020-05-13 13:04...|       #Baseball.FAQ|    1|\n|[2020-05-13 13:04...|        #OnlineStore|    1|\n|[2020-05-13 13:04...| #SisterAppreciation|    1|\n|[2020-05-13 13:04...| #PushAwardsLizQuens|    4|\n|[2020-05-13 13:04...|       #Baseball.FAQ|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 6\n-------------------------------------------\n+--------------------+-------------------+-----+\n|              window|              topic|count|\n+--------------------+-------------------+-----+\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    6|\n|[2020-05-13 13:04...|  #CPEC_GameChanger|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    9|\n|[2020-05-13 13:04...| #MicrosoftDynamics|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    3|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    1|\n|[2020-05-13 13:04...|            #credit|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    6|\n|[2020-05-13 13:04...|            #credit|    1|\n|[2020-05-13 13:04...| #MicrosoftDynamics|    1|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|   11|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    6|\n|[2020-05-13 13:04...| #MicrosoftDynamics|    1|\n|[2020-05-13 13:04...|  #CPEC_GameChanger|    1|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    7|\n|[2020-05-13 13:04...|            #credit|    1|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    3|\n|[2020-05-13 13:04...|  #CPEC_GameChanger|    1|\n+--------------------+-------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 7\n-------------------------------------------\n+--------------------+-------------------+-----+\n|              window|              topic|count|\n+--------------------+-------------------+-----+\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    7|\n|[2020-05-13 13:04...|          #painting|    2|\n|[2020-05-13 13:04...|        #Derbyshire|    1|\n|[2020-05-13 13:04...|        #Derbyshire|    1|\n|[2020-05-13 13:04...|  #KolkataHospitals|    1|\n|[2020-05-13 13:04...|               #art|    1|\n|[2020-05-13 13:04...|            #몬채널|    1|\n|[2020-05-13 13:04...|          #bakewell|    1|\n|[2020-05-13 13:04...|            #몬채널|    1|\n|[2020-05-13 13:04...|              #MUFC|    1|\n|[2020-05-13 13:04...|        #Quote\nWhen|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    3|\n|[2020-05-13 13:04...|  #KolkataHospitals|    1|\n|[2020-05-13 13:04...|               #art|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    5|\n|[2020-05-13 13:04...|            #몬채널|    1|\n|[2020-05-13 13:04...| #BlackWomenDidThat|    1|\n|[2020-05-13 13:04...|                 #B|    1|\n|[2020-05-13 13:04...|           #Destiny|    1|\n|[2020-05-13 13:04...| #رابطه_عشاق_القهوه|    1|\n+--------------------+-------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 8\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:04...| #PushAwardsLizQuens|    1|\n|[2020-05-13 13:04...|            #Samples|    1|\n|[2020-05-13 13:04...|      #ALDUBSafeZone|    1|\n|[2020-05-13 13:04...|         #プレゼント|    1|\n|[2020-05-13 13:04...|      #bancodeseries|    1|\n|[2020-05-13 13:04...|         #プレゼント|    1|\n|[2020-05-13 13:04...|               #sale|    1|\n|[2020-05-13 13:04...|          #Education|    2|\n|[2020-05-13 13:04...|      #bancodeseries|    1|\n|[2020-05-13 13:04...|            #Science|    1|\n|[2020-05-13 13:04...|        #gidinigeria|    1|\n|[2020-05-13 13:04...| #PushAwardsLizQuens|    1|\n|[2020-05-13 13:04...|      #bancodeseries|    1|\n|[2020-05-13 13:04...|        #gidinigeria|    1|\n|[2020-05-13 13:04...|      #bancodeseries|    1|\n|[2020-05-13 13:04...|#VendrediLecture\n\nEn|    1|\n|[2020-05-13 13:04...|#VendrediLecture\n\nEn|    1|\n|[2020-05-13 13:04...|          #Education|    1|\n|[2020-05-13 13:04...| #DolceAmoreSabotage|    1|\n|[2020-05-13 13:04...|               #sale|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 9\n-------------------------------------------\n+--------------------+-------------------+-----+\n|              window|              topic|count|\n+--------------------+-------------------+-----+\n|[2020-05-13 13:04...|       #ทรงพระเจริญ|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    4|\n|[2020-05-13 13:04...|           #auction|    1|\n|[2020-05-13 13:04...|       #ทรงพระเจริญ|    1|\n|[2020-05-13 13:04...|          #SevereWX|    1|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    7|\n|[2020-05-13 13:04...|         #lockherup|    1|\n|[2020-05-13 13:04...|              #Obra|    1|\n|[2020-05-13 13:04...|       #ทรงพระเจริญ|    1|\n|[2020-05-13 13:04...|          #Shillary|    1|\n|[2020-05-13 13:04...|        #balenciaga|    1|\n|[2020-05-13 13:04...|        #يوم_الجمعه|    1|\n|[2020-05-13 13:04...|           #Reforma|    1|\n|[2020-05-13 13:04...|           #Reforma|    1|\n|[2020-05-13 13:04...|          #Shillary|    1|\n|[2020-05-13 13:04...|         #lockherup|    1|\n|[2020-05-13 13:04...|        #balenciaga|    1|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    6|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    7|\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    6|\n+--------------------+-------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 10\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|             #الجمعه|    1|\n|[2020-05-13 13:04...|             #الجمعه|    1|\n|[2020-05-13 13:04...|#SientoMuchoMiedo...|    1|\n|[2020-05-13 13:04...|            #المهاجر|    1|\n|[2020-05-13 13:04...|          #เสียงสู๊ง|    1|\n|[2020-05-13 13:04...| #DolceAmoreSabotage|    3|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...|         #يوم_الجمعة|    1|\n|[2020-05-13 13:04...|          #เสียงสู๊ง|    1|\n|[2020-05-13 13:04...| #PushAwardsLizQuens|    3|\n|[2020-05-13 13:04...|#DolceAmoreSabota...|    1|\n|[2020-05-13 13:04...| #DolceAmoreSabotage|    3|\n|[2020-05-13 13:04...|        #BTSinMANILA|    1|\n|[2020-05-13 13:04...|        #BTSinMANILA|    1|\n|[2020-05-13 13:04...|         #يوم_الجمعة|    1|\n|[2020-05-13 13:04...| #DolceAmoreSabotage|    3|\n|[2020-05-13 13:04...| #DolceAmoreSabotage|    3|\n|[2020-05-13 13:04...| #PushAwardsLizQuens|    3|\n|[2020-05-13 13:04...| #PushAwardsLizQuens|    3|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 11\n-------------------------------------------\n+--------------------+---------------------------------+-----+\n|              window|                            topic|count|\n+--------------------+---------------------------------+-----+\n|[2020-05-13 13:04...|                          #follow|    1|\n|[2020-05-13 13:04...|                            #comp|    1|\n|[2020-05-13 13:04...|                         #retweet|    1|\n|[2020-05-13 13:04...|                     #competition|    1|\n|[2020-05-13 13:04...|                            #comp|    1|\n|[2020-05-13 13:04...|                         #Virtual|    1|\n|[2020-05-13 13:04...|              #PushAwardsLizQuens|    7|\n|[2020-05-13 13:04...|              #PushAwardsLizQuens|    8|\n|[2020-05-13 13:04...|                            #comp|    1|\n|[2020-05-13 13:04...|#메이저놀이터\n#네임드사다리사이트|    1|\n|[2020-05-13 13:04...|                             #win|    1|\n|[2020-05-13 13:04...|                     #HarleyQuinn|    1|\n|[2020-05-13 13:04...|             #أذكار_الصباح_وال...|    1|\n|[2020-05-13 13:04...|                          #follow|    1|\n|[2020-05-13 13:04...|                     #HarleyQuinn|    1|\n|[2020-05-13 13:04...|                              #rt|    1|\n|[2020-05-13 13:04...|              #PushAwardsLizQuens|    1|\n|[2020-05-13 13:04...|#메이저놀이터\n#네임드사다리사이트|    1|\n|[2020-05-13 13:04...|                     #HarleyQuinn|    1|\n|[2020-05-13 13:04...|                           #prize|    1|\n+--------------------+---------------------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 12\n-------------------------------------------\n+--------------------+-------------------+-----+\n|              window|              topic|count|\n+--------------------+-------------------+-----+\n|[2020-05-13 13:04...|#DolceAmoreSabotage|    5|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    4|\n|[2020-05-13 13:05...|         #BIGOLIVE.|    1|\n|[2020-05-13 13:05...|      #WhatIsMorgan|    1|\n|[2020-05-13 13:05...|            #居酒屋|    1|\n|[2020-05-13 13:04...|#PushAwardsLizQuens|    5|\n|[2020-05-13 13:05...|              #ポー|    1|\n|[2020-05-13 13:04...|          #loveweek|    1|\n|[2020-05-13 13:05...|      #WhatIsMorgan|    1|\n|[2020-05-13 13:04...|    #ニューオープン|    1|\n|[2020-05-13 13:05...|#DolceAmoreSabotage|    1|\n|[2020-05-13 13:05...| #POWのポストカード|    1|\n|[2020-05-13 13:05...| #POWのポストカード|    1|\n|[2020-05-13 13:05...|              #ポー|    1|\n|[2020-05-13 13:04...|     #itstheweekend|    1|\n|[2020-05-13 13:05...|     #itstheweekend|    1|\n|[2020-05-13 13:05...|          #エルフ耳|    1|\n|[2020-05-13 13:05...|      #こだまちゃん|    1|\n|[2020-05-13 13:04...|            #qjナビ|    1|\n|[2020-05-13 13:04...|        #美容師求人|    1|\n+--------------------+-------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 13\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:05...|       #Koussevitzky|    1|\n|[2020-05-13 13:05...|           #相互ﾌｫﾛｰ|    1|\n|[2020-05-13 13:05...|       #Crowdfunding|    1|\n|[2020-05-13 13:05...| #PushAwardsLizQuens|    1|\n|[2020-05-13 13:05...|         #followback|    1|\n|[2020-05-13 13:05...|           #giveaway|    1|\n|[2020-05-13 13:05...|         #followmejp|    1|\n|[2020-05-13 13:05...|           #giveaway|    1|\n|[2020-05-13 13:05...|        #getwellsoon|    1|\n|[2020-05-13 13:05...|        #VistasalMar|    1|\n|[2020-05-13 13:05...|#MinorityEntrepre...|    1|\n|[2020-05-13 13:05...|           #refollow|    1|\n|[2020-05-13 13:05...|                #win|    1|\n|[2020-05-13 13:05...|           #refollow|    1|\n|[2020-05-13 13:05...| #PushAwardsLizQuens|    1|\n|[2020-05-13 13:05...|#MinorityEntrepre...|    1|\n|[2020-05-13 13:05...|      #Yahooニュース|    1|\n|[2020-05-13 13:05...|           #相互ﾌｫﾛｰ|    1|\n|[2020-05-13 13:05...|           #followme|    1|\n|[2020-05-13 13:05...|         #followback|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 14\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:05...|#PushAwardsKathNiels|    1|\n|[2020-05-13 13:05...|                 #15|    1|\n|[2020-05-13 13:05...|#PushAwardsKathNiels|    1|\n|[2020-05-13 13:05...|#GerindraPilihSan...|    1|\n|[2020-05-13 13:05...|#GerindraPilihSan...|    1|\n|[2020-05-13 13:05...|#GerindraPilihSan...|    1|\n|[2020-05-13 13:05...|           #security|    1|\n|[2020-05-13 13:05...| #alquilerdevivienda|    1|\n|[2020-05-13 13:05...|     #食べたい人はRT|    1|\n|[2020-05-13 13:05...|#ISAOutthinkChall...|    1|\n|[2020-05-13 13:05...| #alquilerdevivienda|    1|\n|[2020-05-13 13:05...|#ISAOutthinkChall...|    1|\n|[2020-05-13 13:05...| #alquilerdevivienda|    1|\n|[2020-05-13 13:05...|                 #15|    1|\n|[2020-05-13 13:05...|             #Dudley|    1|\n|[2020-05-13 13:05...|             #Dudley|    1|\n|[2020-05-13 13:05...|#ISAOutthinkChall...|    1|\n|[2020-05-13 13:05...|           #security|    1|\n|[2020-05-13 13:05...|             #Dudley|    1|\n|[2020-05-13 13:05...|             #Dudley|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 15\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:05...|              #oxted|    1|\n|[2020-05-13 13:05...|               #jobs|    1|\n|[2020-05-13 13:05...| #DolceAmoreSabotage|    1|\n|[2020-05-13 13:05...| #DolceAmoreSabotage|    1|\n|[2020-05-13 13:05...|                  #2|    1|\n|[2020-05-13 13:05...|             #Toledo|    1|\n|[2020-05-13 13:05...|        #ourjobsrock|    1|\n|[2020-05-13 13:05...|            #careers|    1|\n|[2020-05-13 13:05...|       #GreatestHits|    1|\n|[2020-05-13 13:05...|               #jobs|    1|\n|[2020-05-13 13:05...|        #AnahiTrendy|    1|\n|[2020-05-13 13:05...|      #話題・Twitter|    1|\n|[2020-05-13 13:05...|    #StreamColdWater|    1|\n|[2020-05-13 13:05...|               #Iran|    1|\n|[2020-05-13 13:05...|       #GreatestHits|    1|\n|[2020-05-13 13:05...|#CapitalidadGastr...|    1|\n|[2020-05-13 13:05...|           #FreeIran|    1|\n|[2020-05-13 13:05...|    #StreamColdWater|    1|\n|[2020-05-13 13:05...|          #KCAMexico|    1|\n|[2020-05-13 13:05...|        #ourjobsrock|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 16\n-------------------------------------------\n+--------------------+---------------+-----+\n|              window|          topic|count|\n+--------------------+---------------+-----+\n|[2020-05-13 13:05...|        #FInde!|    1|\n|[2020-05-13 13:05...|        #FInde!|    1|\n|[2020-05-13 13:05...|#แบบนี้ก็ได้หรอ|    1|\n|[2020-05-13 13:05...|      #chatroom|    1|\n|[2020-05-13 13:05...|  #fitnessmodel|    1|\n|[2020-05-13 13:05...|    #Decoracion|    1|\n|[2020-05-13 13:05...|       #sexlife|    1|\n|[2020-05-13 13:05...|#Fitstats_en_CA|    1|\n|[2020-05-13 13:05...|#แบบนี้ก็ได้หรอ|    1|\n|[2020-05-13 13:05...|     #BodaCivil|    1|\n|[2020-05-13 13:05...|#Olimpiade2016!|    1|\n|[2020-05-13 13:05...|#Olimpiade2016!|    1|\n|[2020-05-13 13:05...|#Olimpiade2016!|    1|\n|[2020-05-13 13:05...|#Fitstats_en_CA|    1|\n|[2020-05-13 13:05...|     #BodaCivil|    1|\n|[2020-05-13 13:05...|        #Hadith|    1|\n|[2020-05-13 13:05...|    #Decoracion|    1|\n|[2020-05-13 13:05...|     #nosleepg…|    1|\n|[2020-05-13 13:05...|     #BodaCivil|    1|\n|[2020-05-13 13:05...|     #BodaCivil|    1|\n+--------------------+---------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 17\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:05...|               #1999|    1|\n|[2020-05-13 13:05...|            #bestbuy|    1|\n|[2020-05-13 13:05...|           #business|    1|\n|[2020-05-13 13:05...|             #Travel|    1|\n|[2020-05-13 13:05...|             #eureka|    1|\n|[2020-05-13 13:05...|             #events|    1|\n|[2020-05-13 13:05...|             #manutd|    1|\n|[2020-05-13 13:05...|#MSGsaysLeaveJeal...|    1|\n|[2020-05-13 13:05...|                 #CL|    1|\n|[2020-05-13 13:05...|      #Entrepreneurs|    1|\n|[2020-05-13 13:05...|              #Sales|    1|\n|[2020-05-13 13:05...|             #eureka|    1|\n|[2020-05-13 13:05...|       #petsplace.nl|    1|\n|[2020-05-13 13:05...|             #manutd|    1|\n|[2020-05-13 13:05...|    #nameonthetrophy|    1|\n|[2020-05-13 13:05...|       #petsplace.nl|    1|\n|[2020-05-13 13:05...|           #Complete|    1|\n|[2020-05-13 13:05...|           #cleavage|    1|\n|[2020-05-13 13:05...|             #Bayern|    1|\n|[2020-05-13 13:05...|               #8116|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 18\n-------------------------------------------\n+--------------------+---------------+-----+\n|              window|          topic|count|\n+--------------------+---------------+-----+\n|[2020-05-13 13:05...|      #マシマシ|    1|\n|[2020-05-13 13:05...|      #ポケモン|    1|\n|[2020-05-13 13:05...|      #여우알바|    1|\n|[2020-05-13 13:05...|  #emprendedor?|    1|\n|[2020-05-13 13:05...| #enlightenment|    1|\n|[2020-05-13 13:05...|             #ﷺ|    1|\n|[2020-05-13 13:05...|  #기흥출장안마|    1|\n|[2020-05-13 13:05...|          #아메|    1|\n|[2020-05-13 13:05...|     #Christmas|    1|\n|[2020-05-13 13:05...|     #KPMadLove|    1|\n|[2020-05-13 13:05...|      #딸기채팅|    1|\n|[2020-05-13 13:05...|  #기흥출장안마|    1|\n|[2020-05-13 13:05...|      #ポケモン|    1|\n|[2020-05-13 13:05...|      #マシマシ|    1|\n|[2020-05-13 13:05...|     #KPMadLove|    1|\n|[2020-05-13 13:05...|    #어우동야동|    1|\n|[2020-05-13 13:05...|#선릉야구장위치|    1|\n|[2020-05-13 13:05...| #enlightenment|    1|\n|[2020-05-13 13:05...|#선릉야구장위치|    1|\n|[2020-05-13 13:05...|        #Hadith|    1|\n+--------------------+---------------+-----+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 19\n-------------------------------------------\n+--------------------+--------------------+-----+\n|              window|               topic|count|\n+--------------------+--------------------+-----+\n|[2020-05-13 13:05...|               #dq10|    1|\n|[2020-05-13 13:05...|                #NEW|    1|\n|[2020-05-13 13:05...|               #暴言|    1|\n|[2020-05-13 13:05...|#DesmadreTricolor...|    1|\n|[2020-05-13 13:05...|#DesmadreTricolor...|    1|\n|[2020-05-13 13:05...|               #暴言|    1|\n|[2020-05-13 13:05...|         #ViveanGray|    1|\n|[2020-05-13 13:05...|               #暴言|    1|\n|[2020-05-13 13:05...|                #80s|    1|\n|[2020-05-13 13:05...|         #missni2016|    1|\n|[2020-05-13 13:05...|      #affiliatelink|    1|\n|[2020-05-13 13:05...|                 #เ…|    1|\n|[2020-05-13 13:05...|          #MrsMangle|    1|\n|[2020-05-13 13:05...|          #MrsMangle|    1|\n|[2020-05-13 13:05...|                #NEW|    1|\n|[2020-05-13 13:05...|                #80s|    1|\n|[2020-05-13 13:05...|      #affiliatelink|    1|\n|[2020-05-13 13:05...|           #迷惑行為|    1|\n|[2020-05-13 13:05...|#AldenScentsbyBoa...|    1|\n|[2020-05-13 13:05...|                 #เ…|    1|\n+--------------------+--------------------+-----+\nonly showing top 20 rows\n\nquery: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@237eac4\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422012_12698874",
      "id": "20170218-162247_324928954",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7010"
    },
    {
      "text": "%md\n## 4.2 Create Dynamic Table\n\nWe can also use a \"memory\" output, which is a queryable live table. In order to do so, we again create a new table, but this time with format `memory` and an explicit query name `topic_counts`. Using a `memory` output will create a dynamic table in memory (only `complete` output supported right now), which can be queried using SQL.\n\n1. Create a DataStreamWriter object using the writeStream method of your DataFrame `windowedCounts`.\n2. Set the format to `memory`\n3. Set the output mode to `append` (this is supported for time windowed aggregations)\n4. Set the query name to `topic_counts`\n5. Specify a checkPointLocation on HDFS (ok, this is not trivial, so it is in the code below)\n6. Start the continuous query via `start`",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>4.2 Create Dynamic Table</h2>\n<p>We can also use a &ldquo;memory&rdquo; output, which is a queryable live table. In order to do so, we again create a new table, but this time with format <code>memory</code> and an explicit query name <code>topic_counts</code>. Using a <code>memory</code> output will create a dynamic table in memory (only <code>complete</code> output supported right now), which can be queried using SQL.</p>\n<ol>\n<li>Create a DataStreamWriter object using the writeStream method of your DataFrame <code>windowedCounts</code>.</li>\n<li>Set the format to <code>memory</code></li>\n<li>Set the output mode to <code>append</code> (this is supported for time windowed aggregations)</li>\n<li>Set the query name to <code>topic_counts</code></li>\n<li>Specify a checkPointLocation on HDFS (ok, this is not trivial, so it is in the code below)</li>\n<li>Start the continuous query via <code>start</code></li>\n</ol>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422013_517827193",
      "id": "20170218-160934_1425298948",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7011"
    },
    {
      "text": "val tableQuery = windowedCounts.writeStream\n    .outputMode(\"append\")\n    .format(\"memory\")\n    .trigger(ProcessingTime(\"1 seconds\"))\n    .queryName(\"topic_counts\")\n    .option(\"checkpointLocation\", \"/tmp/zeppelin/checkpoint-twitter-table-\" + System.currentTimeMillis())\n    .start()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\ntableQuery: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@304c3d4f\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422014_39509928",
      "id": "20170218-161145_208429016",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7012"
    },
    {
      "text": "%md\n## 4.3 Perform Query\n\nNow that we have a dynamic table, we can perform SQL queries against this table as if it was a normal static table.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>4.3 Perform Query</h2>\n<p>Now that we have a dynamic table, we can perform SQL queries against this table as if it was a normal static table.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422014_-2076610083",
      "id": "20170218-162010_1110788275",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7013"
    },
    {
      "text": "%sql\nselect \n    * \nfrom topic_counts\norder by count desc\nlimit 10",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [
                {
                  "name": "window",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "topic",
                  "index": 1,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "scatter": {
                "xAxis": {
                  "name": "window",
                  "index": 0,
                  "aggr": "sum"
                }
              },
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "window": "string",
                      "topic": "string",
                      "count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "window\ttopic\tcount\n[2020-05-13 13:06:08.0,2020-05-13 13:06:13.0]\t#Sweden\t1\n[2020-05-13 13:06:08.0,2020-05-13 13:06:13.0]\t#MGWV\n《5》FOLLOW\t1\n[2020-05-13 13:06:07.0,2020-05-13 13:06:12.0]\t#nowplaying\t1\n[2020-05-13 13:06:09.0,2020-05-13 13:06:14.0]\t#ian1\t1\n[2020-05-13 13:06:10.0,2020-05-13 13:06:15.0]\t#Netherlands\t1\n[2020-05-13 13:06:09.0,2020-05-13 13:06:14.0]\t#boueibu\t1\n[2020-05-13 13:06:10.0,2020-05-13 13:06:15.0]\t#Authors\t1\n[2020-05-13 13:06:09.0,2020-05-13 13:06:14.0]\t#Netherlands\t1\n[2020-05-13 13:06:09.0,2020-05-13 13:06:14.0]\t#سنابيات\t1\n[2020-05-13 13:06:10.0,2020-05-13 13:06:15.0]\t#PDLavagna\t1\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422014_542863612",
      "id": "20170218-161337_1103351127",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7014"
    },
    {
      "text": "%md\n## 4.4 Stop Query\n\nIn order to clean everything up, we stop the query again.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>4.4 Stop Query</h2>\n<p>In order to clean everything up, we stop the query again.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422014_438488587",
      "id": "20170218-162048_842521010",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7015"
    },
    {
      "text": "tableQuery.stop()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422015_-706322527",
      "id": "20170218-161329_1844676678",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7016"
    },
    {
      "text": "%md\n# 5. SQL Output\n\nA more meaningful example will store the results in a MySQL database. This allows us better experiments with different output modes and does not require the `Thread.sleep` hack. In order to be able to access the MySQL driver, we need to add the following dependency manually to Zeppelin:\n\n    mysql:mysql-connector-java:6.0.6 \n\nThen we are ready to implement a special `ForeachSink` which allows to output streaming results to arbitrary sinks.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>5. SQL Output</h1>\n<p>A more meaningful example will store the results in a MySQL database. This allows us better experiments with different output modes and does not require the <code>Thread.sleep</code> hack. In order to be able to access the MySQL driver, we need to add the following dependency manually to Zeppelin:</p>\n<pre><code>mysql:mysql-connector-java:6.0.6 \n</code></pre>\n<p>Then we are ready to implement a special <code>ForeachSink</code> which allows to output streaming results to arbitrary sinks.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422015_-537767097",
      "id": "20180405-190358_1697918875",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7017"
    },
    {
      "text": "%md\n## 5.1 Create JDBCSink\n\nBy extending the class `ForeachWriter` we implement a JDBC sink which writes into a MySQL database. We use UPSERTs in order to be able to process updated data, when we set the output mode to `update`.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>5.1 Create JDBCSink</h2>\n<p>By extending the class <code>ForeachWriter</code> we implement a JDBC sink which writes into a MySQL database. We use UPSERTs in order to be able to process updated data, when we set the output mode to <code>update</code>.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422015_-765555478",
      "id": "20180409-184840_694173197",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7018"
    },
    {
      "text": "\nclass JDBCSink(url: String, user:String, pwd:String) extends org.apache.spark.sql.ForeachWriter[org.apache.spark.sql.Row] {\n    import org.apache.commons.lang.StringEscapeUtils\n    \n    val driver = \"com.mysql.cj.jdbc.Driver\"\n\n    @transient var connection:java.sql.Connection = _\n    @transient var statement:java.sql.Statement = _\n\n    def open(partitionId: Long, version: Long):Boolean = {\n        Class.forName(driver)\n        connection = java.sql.DriverManager.getConnection(url, user, pwd)\n        statement = connection.createStatement\n        true\n    }\n\n    def process(value: org.apache.spark.sql.Row): Unit = { \n        try {\n            val ts = value(0).toString\n            val topic = StringEscapeUtils.escapeSql(value.getString(1))\n            val freq = value.getLong(2)            \n            statement.executeUpdate(s\"INSERT INTO twitter_topics(ts, topic, frequency) VALUES ('$ts','$topic',$freq) ON DUPLICATE KEY UPDATE frequency=$freq;\")\n        }\n        catch {\n            case t:Throwable =>\n        }\n    }\n\n    def close(errorOrNull:Throwable):Unit = {\n        connection.close\n        connection = null\n        statement = null\n    }\n}\n",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined class JDBCSink\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422016_-232757228",
      "id": "20180409-183738_1503870515",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7019"
    },
    {
      "text": "val url = \"jdbc:mysql://kku.training.dimajix-aws.net/training\"\nval user = \"user\"\nval pwd = \"user\"\n\nval sink = new JDBCSink(url, user, pwd)",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "url: String = jdbc:mysql://kku.training.dimajix-aws.net/training\nuser: String = user\npwd: String = user\nsink: JDBCSink = JDBCSink@453a174d\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422016_-2109325810",
      "id": "20180409-184057_55953501",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7020"
    },
    {
      "text": "%md\n## 5.2 Create Target Table\n\nIn order to store the results in MySQL, we need to create an appropriate table in MySQL. We use shell commands for that.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>5.2 Create Target Table</h2>\n<p>In order to store the results in MySQL, we need to create an appropriate table in MySQL. We use shell commands for that.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422016_1029305352",
      "id": "20180409-185001_2128857477",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7021"
    },
    {
      "text": "%sh\nmysql --user=user --password=user -e \"CREATE TABLE IF NOT EXISTS training.twitter_topics (ts TIMESTAMP NOT NULL DEFAULT 0, topic VARCHAR(128) NOT NULL, frequency INT NULL, PRIMARY KEY (ts, topic))\"",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sh",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422016_803219891",
      "id": "20180409-185155_1814796043",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7022"
    },
    {
      "text": "%md\n## 5.3 Perform Aggregation\n\nNow we generate the streaming aggregation again as usual.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>5.3 Perform Aggregation</h2>\n<p>Now we generate the streaming aggregation again as usual.</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422017_1157452153",
      "id": "20180409-185111_1502227523",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7023"
    },
    {
      "text": "val windowedCounts = topics\n    .withWatermark(\"timestamp\", \"90 seconds\")\n    .groupBy(window($\"timestamp\", \"10 seconds\"), $\"topic\")\n    .agg(sum(lit(1)).as(\"count\"))\n    .coalesce(10)\n    .select(col(\"window.end\"), col(\"topic\"), col(\"count\"))\n    \nwindowedCounts.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- end: timestamp (nullable = true)\n |-- topic: string (nullable = true)\n |-- count: long (nullable = true)\n\nwindowedCounts: org.apache.spark.sql.DataFrame = [end: timestamp, topic: string ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422017_-754354483",
      "id": "20180409-184415_1712878112",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7024"
    },
    {
      "text": "%md\n## 5.4 Execute Streaming Query\n\nFinally we start the query. We use the `update` output mode in order to have a low latency of partial results. Triggers should happen every 5 seconds.",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>5.4 Execute Streaming Query</h2>\n<p>Finally we start the query. We use the <code>update</code> output mode in order to have a low latency of partial results. Triggers should happen every 5 seconds.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422017_1560420908",
      "id": "20180409-185131_1741905905",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7025"
    },
    {
      "text": "import org.apache.spark.sql.streaming.ProcessingTime\n\nval query = windowedCounts.writeStream\n    .foreach(sink)\n    .outputMode(\"update\")\n    .trigger(ProcessingTime(\"3 seconds\"))\n    .queryName(\"topic_counts\")\n    .option(\"checkpointLocation\", \"/tmp/zeppelin/checkpoint-twitter-\" + System.currentTimeMillis())\n    .start()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\nimport org.apache.spark.sql.streaming.ProcessingTime\nquery: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@5412c15d\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422017_-1246220991",
      "id": "20180409-184151_1626285404",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7026"
    },
    {
      "text": "query.stop()",
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422018_-1033344602",
      "id": "20180409-190028_1292220214",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7027"
    },
    {
      "user": "anonymous",
      "dateUpdated": "2021-09-18T06:43:42+0000",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1631947422018_-71596326",
      "id": "20180409-190501_2093504126",
      "dateCreated": "2021-09-18T06:43:42+0000",
      "status": "READY",
      "$$hashKey": "object:7028"
    }
  ],
  "name": "Twitter Structured Streaming - Full",
  "id": "2GGAZ5GRR",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Twitter Structured Streaming - Full"
}